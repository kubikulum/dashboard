{
  "openapi": "3.0.0",
  "info": {
    "title": "Kubernetes CRD Swagger",
    "version": "v0.1.0"
  },
  "paths": {
    "/apis/cluster.x-k8s.io/v1beta1/clusterclasses": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind ClusterClass",
        "operationId": "listClusterXK8sIoV1beta1ClusterClassForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClassList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClassList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/clusters": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind Cluster",
        "operationId": "listClusterXK8sIoV1beta1ClusterForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machinedeployments": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineDeployment",
        "operationId": "listClusterXK8sIoV1beta1MachineDeploymentForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeploymentList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeploymentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machinedrainrules": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineDrainRule",
        "operationId": "listClusterXK8sIoV1beta1MachineDrainRuleForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRuleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRuleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machinehealthchecks": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineHealthCheck",
        "operationId": "listClusterXK8sIoV1beta1MachineHealthCheckForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheckList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheckList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machinepools": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachinePool",
        "operationId": "listClusterXK8sIoV1beta1MachinePoolForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePoolList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePoolList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machines": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind Machine",
        "operationId": "listClusterXK8sIoV1beta1MachineForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/machinesets": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineSet",
        "operationId": "listClusterXK8sIoV1beta1MachineSetForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSetList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSetList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": {
            "type": "integer",
            "uniqueItems": true
          }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": {
            "type": "boolean",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind ClusterClass",
        "operationId": "listClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClassList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClassList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a ClusterClass",
        "operationId": "createClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of ClusterClass",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedClusterClass",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified ClusterClass",
        "operationId": "readClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified ClusterClass",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a ClusterClass",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified ClusterClass",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedClusterClass",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the ClusterClass",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified ClusterClass",
        "operationId": "readClusterXK8sIoV1beta1NamespacedClusterClassStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified ClusterClass",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedClusterClassStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified ClusterClass",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedClusterClassStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "ClusterClass"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the ClusterClass",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusters": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind Cluster",
        "operationId": "listClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a Cluster",
        "operationId": "createClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of Cluster",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedCluster",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusters/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified Cluster",
        "operationId": "readClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified Cluster",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a Cluster",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified Cluster",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedCluster",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Cluster",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusters/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified Cluster",
        "operationId": "readClusterXK8sIoV1beta1NamespacedClusterStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified Cluster",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedClusterStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified Cluster",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedClusterStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Cluster"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Cluster",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedeployments": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineDeployment",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeploymentList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeploymentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a MachineDeployment",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of MachineDeployment",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachineDeployment",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedeployments/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified MachineDeployment",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified MachineDeployment",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a MachineDeployment",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified MachineDeployment",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineDeployment",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineDeployment",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedeployments/{name}/scale": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read scale of the specified MachineDeployment",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineDeploymentScale",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace scale of the specified MachineDeployment",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineDeploymentScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update scale of the specified MachineDeployment",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineDeploymentScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineDeployment",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedeployments/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified MachineDeployment",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineDeploymentStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified MachineDeployment",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineDeploymentStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified MachineDeployment",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineDeploymentStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDeployment"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineDeployment",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedrainrules": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineDrainRule",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRuleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRuleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a MachineDrainRule",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of MachineDrainRule",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinedrainrules/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified MachineDrainRule",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified MachineDrainRule",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a MachineDrainRule",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified MachineDrainRule",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineDrainRule",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineDrainRule"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineDrainRule",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinehealthchecks": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineHealthCheck",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheckList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheckList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a MachineHealthCheck",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of MachineHealthCheck",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinehealthchecks/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified MachineHealthCheck",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified MachineHealthCheck",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a MachineHealthCheck",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified MachineHealthCheck",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineHealthCheck",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineHealthCheck",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinehealthchecks/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified MachineHealthCheck",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineHealthCheckStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified MachineHealthCheck",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineHealthCheckStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified MachineHealthCheck",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineHealthCheckStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineHealthCheck"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineHealthCheck",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinepools": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachinePool",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePoolList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePoolList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a MachinePool",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of MachinePool",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachinePool",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinepools/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified MachinePool",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified MachinePool",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a MachinePool",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified MachinePool",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachinePool",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachinePool",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinepools/{name}/scale": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read scale of the specified MachinePool",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachinePoolScale",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace scale of the specified MachinePool",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachinePoolScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update scale of the specified MachinePool",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachinePoolScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachinePool",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinepools/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified MachinePool",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachinePoolStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified MachinePool",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachinePoolStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified MachinePool",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachinePoolStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachinePool"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachinePool",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machines": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind Machine",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a Machine",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of Machine",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachine",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machines/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified Machine",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified Machine",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a Machine",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified Machine",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachine",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Machine",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machines/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified Machine",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified Machine",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified Machine",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "Machine"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Machine",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinesets": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "list objects of kind MachineSet",
        "operationId": "listClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSetList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSetList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "post": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "create a MachineSet",
        "operationId": "createClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete collection of MachineSet",
        "operationId": "deleteClusterXK8sIoV1beta1CollectionNamespacedMachineSet",
        "parameters": [
          {
            "name": "allowWatchBookmarks",
            "in": "query",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "labelSelector",
            "in": "query",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "resourceVersionMatch",
            "in": "query",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "sendInitialEvents",
            "in": "query",
            "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "watch",
            "in": "query",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "parameters": [
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinesets/{name}": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read the specified MachineSet",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace the specified MachineSet",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "delete": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "delete a MachineSet",
        "operationId": "deleteClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "gracePeriodSeconds",
            "in": "query",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "schema": {
              "type": "integer",
              "uniqueItems": true
            }
          },
          {
            "name": "orphanDependents",
            "in": "query",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update the specified MachineSet",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineSet",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineSet",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinesets/{name}/scale": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read scale of the specified MachineSet",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineSetScale",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace scale of the specified MachineSet",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineSetScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update scale of the specified MachineSet",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineSetScale",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineSet",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    },
    "/apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/machinesets/{name}/status": {
      "get": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "read status of the specified MachineSet",
        "operationId": "readClusterXK8sIoV1beta1NamespacedMachineSetStatus",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "put": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "replace status of the specified MachineSet",
        "operationId": "replaceClusterXK8sIoV1beta1NamespacedMachineSetStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "patch": {
        "tags": [
          "clusterXK8sIo_v1beta1"
        ],
        "description": "partially update status of the specified MachineSet",
        "operationId": "patchClusterXK8sIoV1beta1NamespacedMachineSetStatus",
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldManager",
            "in": "query",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "fieldValidation",
            "in": "query",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "schema": {
              "type": "boolean",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/apply-patch+yaml": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "cluster.x-k8s.io",
          "version": "v1beta1",
          "kind": "MachineSet"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the MachineSet",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": {
            "type": "string",
            "uniqueItems": true
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "io.k8s.api.autoscaling.v1.Scale": {
        "description": "Scale represents a scaling request for a resource.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "spec defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.ScaleSpec"
              }
            ]
          },
          "status": {
            "description": "status is the current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.api.autoscaling.v1.ScaleStatus"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "autoscaling",
            "kind": "Scale",
            "version": "v1"
          }
        ]
      },
      "io.k8s.api.autoscaling.v1.ScaleSpec": {
        "description": "ScaleSpec describes the attributes of a scale subresource.",
        "type": "object",
        "properties": {
          "replicas": {
            "description": "replicas is the desired number of instances for the scaled object.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "io.k8s.api.autoscaling.v1.ScaleStatus": {
        "description": "ScaleStatus represents the current status of a scale subresource.",
        "type": "object",
        "required": [
          "replicas"
        ],
        "properties": {
          "replicas": {
            "description": "replicas is the actual number of observed instances of the scaled object.",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "selector": {
            "description": "selector is the label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
        "description": "DeleteOptions may be provided when deleting an API object.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "dryRun": {
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          },
          "gracePeriodSeconds": {
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type": "integer",
            "format": "int64"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "orphanDependents": {
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type": "boolean"
          },
          "preconditions": {
            "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
              }
            ]
          },
          "propagationPolicy": {
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type": "string"
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "admissionregistration.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "admissionregistration.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "admissionregistration.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "apps",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "apps",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "apps",
            "kind": "DeleteOptions",
            "version": "v1beta2"
          },
          {
            "group": "authentication.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "authentication.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "authentication.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "authorization.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "authorization.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "autoscaling",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "autoscaling",
            "kind": "DeleteOptions",
            "version": "v2"
          },
          {
            "group": "autoscaling",
            "kind": "DeleteOptions",
            "version": "v2beta1"
          },
          {
            "group": "autoscaling",
            "kind": "DeleteOptions",
            "version": "v2beta2"
          },
          {
            "group": "batch",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "batch",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "certificates.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "certificates.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "certificates.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "coordination.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "coordination.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "discovery.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "discovery.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "events.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "events.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "extensions",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "flowcontrol.apiserver.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "flowcontrol.apiserver.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "flowcontrol.apiserver.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta2"
          },
          {
            "group": "flowcontrol.apiserver.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta3"
          },
          {
            "group": "internal.apiserver.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "networking.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "networking.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "networking.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "node.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "node.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "node.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "policy",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "policy",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "rbac.authorization.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "rbac.authorization.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "rbac.authorization.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "resource.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha2"
          },
          {
            "group": "scheduling.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "scheduling.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "scheduling.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          },
          {
            "group": "storage.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1"
          },
          {
            "group": "storage.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1alpha1"
          },
          {
            "group": "storage.k8s.io",
            "kind": "DeleteOptions",
            "version": "v1beta1"
          }
        ]
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
        "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
        "type": "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
        "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
        "type": "object",
        "properties": {
          "continue": {
            "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "type": "string"
          },
          "remainingItemCount": {
            "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
            "type": "integer",
            "format": "int64"
          },
          "resourceVersion": {
            "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "selfLink": {
            "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
        "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "type": "string"
          },
          "fieldsType": {
            "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
            "type": "string"
          },
          "fieldsV1": {
            "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
              }
            ]
          },
          "manager": {
            "description": "Manager is an identifier of the workflow managing these fields.",
            "type": "string"
          },
          "operation": {
            "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
            "type": "string"
          },
          "subresource": {
            "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
            "type": "string"
          },
          "time": {
            "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
              }
            ]
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
        "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "type": "object",
        "properties": {
          "annotations": {
            "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "creationTimestamp": {
            "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
              }
            ]
          },
          "deletionGracePeriodSeconds": {
            "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "deletionTimestamp": {
            "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
              }
            ]
          },
          "finalizers": {
            "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            },
            "x-kubernetes-patch-strategy": "merge"
          },
          "generateName": {
            "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
            "type": "string"
          },
          "generation": {
            "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "labels": {
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "default": ""
            }
          },
          "managedFields": {
            "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
                }
              ]
            }
          },
          "name": {
            "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
            "type": "string"
          },
          "ownerReferences": {
            "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                }
              ]
            },
            "x-kubernetes-patch-merge-key": "uid",
            "x-kubernetes-patch-strategy": "merge"
          },
          "resourceVersion": {
            "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "selfLink": {
            "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
            "type": "string"
          },
          "uid": {
            "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
        "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "type": "object",
        "required": [
          "apiVersion",
          "kind",
          "name",
          "uid"
        ],
        "properties": {
          "apiVersion": {
            "description": "API version of the referent.",
            "type": "string",
            "default": ""
          },
          "blockOwnerDeletion": {
            "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "type": "boolean"
          },
          "controller": {
            "description": "If true, this reference points to the managing controller.",
            "type": "boolean"
          },
          "kind": {
            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string",
            "default": ""
          },
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "type": "string",
            "default": ""
          },
          "uid": {
            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
        "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
        "type": "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
        "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
        "type": "object",
        "properties": {
          "resourceVersion": {
            "description": "Specifies the target ResourceVersion",
            "type": "string"
          },
          "uid": {
            "description": "Specifies the target UID.",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
        "description": "Status is a return value for calls that don't return other objects.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "code": {
            "description": "Suggested HTTP return code for this status, 0 if not set.",
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
              }
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status of this operation.",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          },
          "reason": {
            "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
            "type": "string"
          },
          "status": {
            "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "type": "string"
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "",
            "kind": "Status",
            "version": "v1"
          },
          {
            "group": "resource.k8s.io",
            "kind": "Status",
            "version": "v1alpha2"
          }
        ]
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
        "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
        "type": "object",
        "properties": {
          "field": {
            "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
            "type": "string"
          },
          "reason": {
            "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
        "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
        "type": "object",
        "properties": {
          "causes": {
            "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
                }
              ]
            }
          },
          "group": {
            "description": "The group attribute of the resource associated with the status StatusReason.",
            "type": "string"
          },
          "kind": {
            "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "name": {
            "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
            "type": "string"
          },
          "retryAfterSeconds": {
            "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "description": "UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string",
        "format": "date-time"
      },
      "io.x-k8s.cluster.v1beta1.Cluster": {
        "description": "Cluster is the Schema for the clusters API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "ClusterSpec defines the desired state of Cluster.",
            "type": "object",
            "properties": {
              "availabilityGates": {
                "description": "availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.\n\nNOTE: this field is considered only for computing v1beta2 conditions.",
                "type": "array",
                "maxItems": 32,
                "items": {
                  "description": "ClusterAvailabilityGate contains the type of a Cluster condition to be used as availability gate.",
                  "type": "object",
                  "required": [
                    "conditionType"
                  ],
                  "properties": {
                    "conditionType": {
                      "description": "conditionType refers to a positive polarity condition (status true means good) with matching type in the Cluster's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.",
                      "type": "string",
                      "maxLength": 316,
                      "minLength": 1,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  }
                },
                "x-kubernetes-list-map-keys": [
                  "conditionType"
                ],
                "x-kubernetes-list-type": "map"
              },
              "clusterNetwork": {
                "description": "Cluster network configuration.",
                "type": "object",
                "properties": {
                  "apiServerPort": {
                    "description": "apiServerPort specifies the port the API Server should bind to.\nDefaults to 6443.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pods": {
                    "description": "The network ranges from which Pod networks are allocated.",
                    "type": "object",
                    "required": [
                      "cidrBlocks"
                    ],
                    "properties": {
                      "cidrBlocks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "serviceDomain": {
                    "description": "Domain name for services.",
                    "type": "string"
                  },
                  "services": {
                    "description": "The network ranges from which service VIPs are allocated.",
                    "type": "object",
                    "required": [
                      "cidrBlocks"
                    ],
                    "properties": {
                      "cidrBlocks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "controlPlaneEndpoint": {
                "description": "controlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
                "type": "object",
                "required": [
                  "host",
                  "port"
                ],
                "properties": {
                  "host": {
                    "description": "The hostname on which the API server is serving.",
                    "type": "string"
                  },
                  "port": {
                    "description": "The port on which the API server is serving.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "controlPlaneRef": {
                "description": "controlPlaneRef is an optional reference to a provider-specific resource that holds\nthe details for provisioning the Control Plane for a Cluster.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "infrastructureRef": {
                "description": "infrastructureRef is a reference to a provider-specific resource that holds the details\nfor provisioning infrastructure for a cluster in said provider.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "paused": {
                "description": "paused can be used to prevent controllers from processing the Cluster and all its associated objects.",
                "type": "boolean"
              },
              "topology": {
                "description": "This encapsulates the topology for the cluster.\nNOTE: It is required to enable the ClusterTopology\nfeature gate flag to activate managed topologies support;\nthis feature is highly experimental, and parts of it might still be not implemented.",
                "type": "object",
                "required": [
                  "class",
                  "version"
                ],
                "properties": {
                  "class": {
                    "description": "The name of the ClusterClass object to create the topology.",
                    "type": "string"
                  },
                  "controlPlane": {
                    "description": "controlPlane describes the cluster control plane.",
                    "type": "object",
                    "properties": {
                      "machineHealthCheck": {
                        "description": "machineHealthCheck allows to enable, disable and override\nthe MachineHealthCheck configuration in the ClusterClass for this control plane.",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "enable controls if a MachineHealthCheck should be created for the target machines.\n\nIf false: No MachineHealthCheck will be created.\n\nIf not set(default): A MachineHealthCheck will be created if it is defined here or\n in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.\n\nIf true: A MachineHealthCheck is guaranteed to be created. Cluster validation will\nblock if `enable` is true and no MachineHealthCheck definition is available.",
                            "type": "boolean"
                          },
                          "maxUnhealthy": {
                            "description": "Any further remediation is only allowed if at most \"MaxUnhealthy\" machines selected by\n\"selector\" are not healthy.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "nodeStartupTimeout": {
                            "description": "nodeStartupTimeout allows to set the maximum time for MachineHealthCheck\nto consider a Machine unhealthy if a corresponding Node isn't associated\nthrough a `Spec.ProviderID` field.\n\nThe duration set in this field is compared to the greatest of:\n- Cluster's infrastructure ready condition timestamp (if and when available)\n- Control Plane's initialized condition timestamp (if and when available)\n- Machine's infrastructure ready condition timestamp (if and when available)\n- Machine's metadata creation timestamp\n\nDefaults to 10 minutes.\nIf you wish to disable this feature, set the value explicitly to 0.",
                            "type": "string"
                          },
                          "remediationTemplate": {
                            "description": "remediationTemplate is a reference to a remediation template\nprovided by an infrastructure provider.\n\nThis field is completely optional, when filled, the MachineHealthCheck controller\ncreates a new object from the template referenced and hands off remediation of the machine to\na controller that lives outside of Cluster API.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "API version of the referent.",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": "string"
                              },
                              "resourceVersion": {
                                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                "type": "string"
                              },
                              "uid": {
                                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "unhealthyConditions": {
                            "description": "unhealthyConditions contains a list of the conditions that determine\nwhether a node is considered unhealthy. The conditions are combined in a\nlogical OR, i.e. if any of the conditions is met, the node is unhealthy.",
                            "type": "array",
                            "items": {
                              "description": "UnhealthyCondition represents a Node condition type and value with a timeout\nspecified as a duration.  When the named condition has been in the given\nstatus for at least the timeout value, a node is considered unhealthy.",
                              "type": "object",
                              "required": [
                                "status",
                                "timeout",
                                "type"
                              ],
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "timeout": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            }
                          },
                          "unhealthyRange": {
                            "description": "Any further remediation is only allowed if the number of machines selected by \"selector\" as not healthy\nis within the range of \"UnhealthyRange\". Takes precedence over MaxUnhealthy.\nEg. \"[3-5]\" - This means that remediation will be allowed only when:\n(a) there are at least 3 unhealthy machines (and)\n(b) there are at most 5 unhealthy machines",
                            "type": "string",
                            "pattern": "^\\[[0-9]+-[0-9]+\\]$"
                          }
                        }
                      },
                      "metadata": {
                        "description": "metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane\nif the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it\nis applied only to the ControlPlane.\nAt runtime this metadata is merged with the corresponding metadata from the ClusterClass.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "nodeDeletionTimeout": {
                        "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                        "type": "string"
                      },
                      "nodeDrainTimeout": {
                        "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                        "type": "string"
                      },
                      "nodeVolumeDetachTimeout": {
                        "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                        "type": "string"
                      },
                      "replicas": {
                        "description": "replicas is the number of control plane nodes.\nIf the value is nil, the ControlPlane object is created without the number of Replicas\nand it's assumed that the control plane controller does not implement support for this field.\nWhen specified against a control plane provider that lacks support for this field, this value will be ignored.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "variables": {
                        "description": "variables can be used to customize the ControlPlane through patches.",
                        "type": "object",
                        "properties": {
                          "overrides": {
                            "description": "overrides can be used to override Cluster level variables.",
                            "type": "array",
                            "items": {
                              "description": "ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a\nVariable definition in the ClusterClass `status` variables.",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "definitionFrom": {
                                  "description": "definitionFrom specifies where the definition of this Variable is from.\n\nDeprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "name of the variable.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "value of the variable.\nNote: the value will be validated against the schema of the corresponding ClusterClassVariable\nfrom the ClusterClass.\nNote: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a\nhard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,\ni.e. it is not possible to have no type field.\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111",
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              }
                            },
                            "x-kubernetes-list-map-keys": [
                              "name"
                            ],
                            "x-kubernetes-list-type": "map"
                          }
                        }
                      }
                    }
                  },
                  "rolloutAfter": {
                    "description": "rolloutAfter performs a rollout of the entire cluster one component at a time,\ncontrol plane first and then machine deployments.\n\nDeprecated: This field has no function and is going to be removed in the next apiVersion.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "variables": {
                    "description": "variables can be used to customize the Cluster through\npatches. They must comply to the corresponding\nVariableClasses defined in the ClusterClass.",
                    "type": "array",
                    "items": {
                      "description": "ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a\nVariable definition in the ClusterClass `status` variables.",
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "definitionFrom": {
                          "description": "definitionFrom specifies where the definition of this Variable is from.\n\nDeprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.",
                          "type": "string"
                        },
                        "name": {
                          "description": "name of the variable.",
                          "type": "string"
                        },
                        "value": {
                          "description": "value of the variable.\nNote: the value will be validated against the schema of the corresponding ClusterClassVariable\nfrom the ClusterClass.\nNote: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a\nhard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,\ni.e. it is not possible to have no type field.\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "version": {
                    "description": "The Kubernetes version of the cluster.",
                    "type": "string"
                  },
                  "workers": {
                    "description": "workers encapsulates the different constructs that form the worker nodes\nfor the cluster.",
                    "type": "object",
                    "properties": {
                      "machineDeployments": {
                        "description": "machineDeployments is a list of machine deployments in the cluster.",
                        "type": "array",
                        "items": {
                          "description": "MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology.\nThis set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.",
                          "type": "object",
                          "required": [
                            "class",
                            "name"
                          ],
                          "properties": {
                            "class": {
                              "description": "class is the name of the MachineDeploymentClass used to create the set of worker nodes.\nThis should match one of the deployment classes defined in the ClusterClass object\nmentioned in the `Cluster.Spec.Class` field.",
                              "type": "string"
                            },
                            "failureDomain": {
                              "description": "failureDomain is the failure domain the machines will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                              "type": "string"
                            },
                            "machineHealthCheck": {
                              "description": "machineHealthCheck allows to enable, disable and override\nthe MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.",
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "description": "enable controls if a MachineHealthCheck should be created for the target machines.\n\nIf false: No MachineHealthCheck will be created.\n\nIf not set(default): A MachineHealthCheck will be created if it is defined here or\n in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.\n\nIf true: A MachineHealthCheck is guaranteed to be created. Cluster validation will\nblock if `enable` is true and no MachineHealthCheck definition is available.",
                                  "type": "boolean"
                                },
                                "maxUnhealthy": {
                                  "description": "Any further remediation is only allowed if at most \"MaxUnhealthy\" machines selected by\n\"selector\" are not healthy.",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "nodeStartupTimeout": {
                                  "description": "nodeStartupTimeout allows to set the maximum time for MachineHealthCheck\nto consider a Machine unhealthy if a corresponding Node isn't associated\nthrough a `Spec.ProviderID` field.\n\nThe duration set in this field is compared to the greatest of:\n- Cluster's infrastructure ready condition timestamp (if and when available)\n- Control Plane's initialized condition timestamp (if and when available)\n- Machine's infrastructure ready condition timestamp (if and when available)\n- Machine's metadata creation timestamp\n\nDefaults to 10 minutes.\nIf you wish to disable this feature, set the value explicitly to 0.",
                                  "type": "string"
                                },
                                "remediationTemplate": {
                                  "description": "remediationTemplate is a reference to a remediation template\nprovided by an infrastructure provider.\n\nThis field is completely optional, when filled, the MachineHealthCheck controller\ncreates a new object from the template referenced and hands off remediation of the machine to\na controller that lives outside of Cluster API.",
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "description": "API version of the referent.",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    },
                                    "resourceVersion": {
                                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                      "type": "string"
                                    },
                                    "uid": {
                                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "unhealthyConditions": {
                                  "description": "unhealthyConditions contains a list of the conditions that determine\nwhether a node is considered unhealthy. The conditions are combined in a\nlogical OR, i.e. if any of the conditions is met, the node is unhealthy.",
                                  "type": "array",
                                  "items": {
                                    "description": "UnhealthyCondition represents a Node condition type and value with a timeout\nspecified as a duration.  When the named condition has been in the given\nstatus for at least the timeout value, a node is considered unhealthy.",
                                    "type": "object",
                                    "required": [
                                      "status",
                                      "timeout",
                                      "type"
                                    ],
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "timeout": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                },
                                "unhealthyRange": {
                                  "description": "Any further remediation is only allowed if the number of machines selected by \"selector\" as not healthy\nis within the range of \"UnhealthyRange\". Takes precedence over MaxUnhealthy.\nEg. \"[3-5]\" - This means that remediation will be allowed only when:\n(a) there are at least 3 unhealthy machines (and)\n(b) there are at most 5 unhealthy machines",
                                  "type": "string",
                                  "pattern": "^\\[[0-9]+-[0-9]+\\]$"
                                }
                              }
                            },
                            "metadata": {
                              "description": "metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.\nAt runtime this metadata is merged with the corresponding metadata from the ClusterClass.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "minReadySeconds": {
                              "description": "Minimum number of seconds for which a newly created machine should\nbe ready.\nDefaults to 0 (machine will be considered available as soon as it\nis ready)",
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "description": "name is the unique identifier for this MachineDeploymentTopology.\nThe value is used with other unique identifiers to create a MachineDeployment's Name\n(e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,\nthe values are hashed together.",
                              "type": "string"
                            },
                            "nodeDeletionTimeout": {
                              "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                              "type": "string"
                            },
                            "nodeDrainTimeout": {
                              "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                              "type": "string"
                            },
                            "nodeVolumeDetachTimeout": {
                              "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                              "type": "string"
                            },
                            "replicas": {
                              "description": "replicas is the number of worker nodes belonging to this set.\nIf the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1)\nand it's assumed that an external entity (like cluster autoscaler) is responsible for the management\nof this value.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "strategy": {
                              "description": "The deployment strategy to use to replace existing machines with\nnew ones.",
                              "type": "object",
                              "properties": {
                                "remediation": {
                                  "description": "remediation controls the strategy of remediating unhealthy machines\nand how remediating operations should occur during the lifecycle of the dependant MachineSets.",
                                  "type": "object",
                                  "properties": {
                                    "maxInFlight": {
                                      "description": "maxInFlight determines how many in flight remediations should happen at the same time.\n\nRemediation only happens on the MachineSet with the most current revision, while\nolder MachineSets (usually present during rollout operations) aren't allowed to remediate.\n\nNote: In general (independent of remediations), unhealthy machines are always\nprioritized during scale down operations over healthy ones.\n\nMaxInFlight can be set to a fixed number or a percentage.\nExample: when this is set to 20%, the MachineSet controller deletes at most 20% of\nthe desired replicas.\n\nIf not set, remediation is limited to all machines (bounded by replicas)\nunder the active MachineSet's management.",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                },
                                "rollingUpdate": {
                                  "description": "Rolling update config params. Present only if\nMachineDeploymentStrategyType = RollingUpdate.",
                                  "type": "object",
                                  "properties": {
                                    "deletePolicy": {
                                      "description": "deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.\nValid values are \"Random, \"Newest\", \"Oldest\"\nWhen no value is supplied, the default DeletePolicy of MachineSet is used",
                                      "type": "string",
                                      "enum": [
                                        "Random",
                                        "Newest",
                                        "Oldest"
                                      ]
                                    },
                                    "maxSurge": {
                                      "description": "The maximum number of machines that can be scheduled above the\ndesired number of machines.\nValue can be an absolute number (ex: 5) or a percentage of\ndesired machines (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 1.\nExample: when this is set to 30%, the new MachineSet can be scaled\nup immediately when the rolling update starts, such that the total\nnumber of old and new machines do not exceed 130% of desired\nmachines. Once old machines have been killed, new MachineSet can\nbe scaled up further, ensuring that total number of machines running\nat any time during the update is at most 130% of desired machines.",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "maxUnavailable": {
                                      "description": "The maximum number of machines that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired\nmachines (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 0.\nExample: when this is set to 30%, the old MachineSet can be scaled\ndown to 70% of desired machines immediately when the rolling update\nstarts. Once new machines are ready, old MachineSet can be scaled\ndown further, followed by scaling up the new MachineSet, ensuring\nthat the total number of machines available at all times\nduring the update is at least 70% of desired machines.",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                },
                                "type": {
                                  "description": "type of deployment. Allowed values are RollingUpdate and OnDelete.\nThe default is RollingUpdate.",
                                  "type": "string",
                                  "enum": [
                                    "RollingUpdate",
                                    "OnDelete"
                                  ]
                                }
                              }
                            },
                            "variables": {
                              "description": "variables can be used to customize the MachineDeployment through patches.",
                              "type": "object",
                              "properties": {
                                "overrides": {
                                  "description": "overrides can be used to override Cluster level variables.",
                                  "type": "array",
                                  "items": {
                                    "description": "ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a\nVariable definition in the ClusterClass `status` variables.",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "definitionFrom": {
                                        "description": "definitionFrom specifies where the definition of this Variable is from.\n\nDeprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "name of the variable.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "value of the variable.\nNote: the value will be validated against the schema of the corresponding ClusterClassVariable\nfrom the ClusterClass.\nNote: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a\nhard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,\ni.e. it is not possible to have no type field.\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "name"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                }
                              }
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "machinePools": {
                        "description": "machinePools is a list of machine pools in the cluster.",
                        "type": "array",
                        "items": {
                          "description": "MachinePoolTopology specifies the different parameters for a pool of worker nodes in the topology.\nThis pool of nodes is managed by a MachinePool object whose lifecycle is managed by the Cluster controller.",
                          "type": "object",
                          "required": [
                            "class",
                            "name"
                          ],
                          "properties": {
                            "class": {
                              "description": "class is the name of the MachinePoolClass used to create the pool of worker nodes.\nThis should match one of the deployment classes defined in the ClusterClass object\nmentioned in the `Cluster.Spec.Class` field.",
                              "type": "string"
                            },
                            "failureDomains": {
                              "description": "failureDomains is the list of failure domains the machine pool will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "metadata": {
                              "description": "metadata is the metadata applied to the MachinePool.\nAt runtime this metadata is merged with the corresponding metadata from the ClusterClass.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "minReadySeconds": {
                              "description": "Minimum number of seconds for which a newly created machine pool should\nbe ready.\nDefaults to 0 (machine will be considered available as soon as it\nis ready)",
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "description": "name is the unique identifier for this MachinePoolTopology.\nThe value is used with other unique identifiers to create a MachinePool's Name\n(e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,\nthe values are hashed together.",
                              "type": "string"
                            },
                            "nodeDeletionTimeout": {
                              "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the MachinePool\nhosts after the MachinePool is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                              "type": "string"
                            },
                            "nodeDrainTimeout": {
                              "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                              "type": "string"
                            },
                            "nodeVolumeDetachTimeout": {
                              "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                              "type": "string"
                            },
                            "replicas": {
                              "description": "replicas is the number of nodes belonging to this pool.\nIf the value is nil, the MachinePool is created without the number of Replicas (defaulting to 1)\nand it's assumed that an external entity (like cluster autoscaler) is responsible for the management\nof this value.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "variables": {
                              "description": "variables can be used to customize the MachinePool through patches.",
                              "type": "object",
                              "properties": {
                                "overrides": {
                                  "description": "overrides can be used to override Cluster level variables.",
                                  "type": "array",
                                  "items": {
                                    "description": "ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a\nVariable definition in the ClusterClass `status` variables.",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "definitionFrom": {
                                        "description": "definitionFrom specifies where the definition of this Variable is from.\n\nDeprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "name of the variable.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "value of the variable.\nNote: the value will be validated against the schema of the corresponding ClusterClassVariable\nfrom the ClusterClass.\nNote: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a\nhard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,\ni.e. it is not possible to have no type field.\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "name"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                }
                              }
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "ClusterStatus defines the observed state of Cluster.",
            "type": "object",
            "properties": {
              "conditions": {
                "description": "conditions defines current service state of the cluster.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "controlPlaneReady": {
                "description": "controlPlaneReady denotes if the control plane became ready during initial provisioning\nto receive requests.\nNOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning.\nThe value of this field is never updated after provisioning is completed. Please use conditions\nto check the operational state of the control plane.",
                "type": "boolean"
              },
              "failureDomains": {
                "description": "failureDomains is a slice of failure domain objects synced from the infrastructure provider.",
                "type": "object",
                "additionalProperties": {
                  "description": "FailureDomainSpec is the Schema for Cluster API failure domains.\nIt allows controllers to understand how many failure domains a cluster can optionally span across.",
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "description": "attributes is a free form map of attributes an infrastructure provider might use or require.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "controlPlane": {
                      "description": "controlPlane determines if this failure domain is suitable for use by control plane machines.",
                      "type": "boolean"
                    }
                  }
                }
              },
              "failureMessage": {
                "description": "failureMessage indicates that there is a fatal problem reconciling the\nstate, and will be set to a descriptive error message.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "failureReason": {
                "description": "failureReason indicates that there is a fatal problem reconciling the\nstate, and will be set to a token value suitable for\nprogrammatic interpretation.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "infrastructureReady": {
                "description": "infrastructureReady is the state of the infrastructure provider.",
                "type": "boolean"
              },
              "observedGeneration": {
                "description": "observedGeneration is the latest generation observed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "phase": {
                "description": "phase represents the current phase of cluster actuation.\nE.g. Pending, Running, Terminating, Failed etc.",
                "type": "string"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in Cluster's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "conditions represents the observations of a Cluster's current state.\nKnown condition types are Available, InfrastructureReady, ControlPlaneInitialized, ControlPlaneAvailable, WorkersAvailable, MachinesReady\nMachinesUpToDate, RemoteConnectionProbe, ScalingUp, ScalingDown, Remediating, Deleting, Paused.\nAdditionally, a TopologyReconciled condition will be added in case the Cluster is referencing a ClusterClass / defining a managed Topology.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "controlPlane": {
                    "description": "controlPlane groups all the observations about Cluster's ControlPlane current state.",
                    "type": "object",
                    "properties": {
                      "availableReplicas": {
                        "description": "availableReplicas is the total number of available control plane machines in this cluster. A machine is considered available when Machine's Available condition is true.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "desiredReplicas": {
                        "description": "desiredReplicas is the total number of desired control plane machines in this cluster.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "readyReplicas": {
                        "description": "readyReplicas is the total number of ready control plane machines in this cluster. A machine is considered ready when Machine's Ready condition is true.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "replicas": {
                        "description": "replicas is the total number of control plane machines in this cluster.\nNOTE: replicas also includes machines still being provisioned or being deleted.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "upToDateReplicas": {
                        "description": "upToDateReplicas is the number of up-to-date control plane machines in this cluster. A machine is considered up-to-date when Machine's UpToDate condition is true.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "workers": {
                    "description": "workers groups all the observations about Cluster's Workers current state.",
                    "type": "object",
                    "properties": {
                      "availableReplicas": {
                        "description": "availableReplicas is the total number of available worker machines in this cluster. A machine is considered available when Machine's Available condition is true.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "desiredReplicas": {
                        "description": "desiredReplicas is the total number of desired worker machines in this cluster.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "readyReplicas": {
                        "description": "readyReplicas is the total number of ready worker machines in this cluster. A machine is considered ready when Machine's Ready condition is true.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "replicas": {
                        "description": "replicas is the total number of worker machines in this cluster.\nNOTE: replicas also includes machines still being provisioned or being deleted.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "upToDateReplicas": {
                        "description": "upToDateReplicas is the number of up-to-date worker machines in this cluster. A machine is considered up-to-date when Machine's UpToDate condition is true.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "Cluster",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.ClusterClass": {
        "description": "ClusterClass is a template which can be used to create managed topologies.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "ClusterClassSpec describes the desired state of the ClusterClass.",
            "type": "object",
            "properties": {
              "controlPlane": {
                "description": "controlPlane is a reference to a local struct that holds the details\nfor provisioning the Control Plane for the Cluster.",
                "type": "object",
                "required": [
                  "ref"
                ],
                "properties": {
                  "machineHealthCheck": {
                    "description": "machineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass.\nThis field is supported if and only if the ControlPlane provider template\nreferenced above is Machine based and supports setting replicas.",
                    "type": "object",
                    "properties": {
                      "maxUnhealthy": {
                        "description": "Any further remediation is only allowed if at most \"MaxUnhealthy\" machines selected by\n\"selector\" are not healthy.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "nodeStartupTimeout": {
                        "description": "nodeStartupTimeout allows to set the maximum time for MachineHealthCheck\nto consider a Machine unhealthy if a corresponding Node isn't associated\nthrough a `Spec.ProviderID` field.\n\nThe duration set in this field is compared to the greatest of:\n- Cluster's infrastructure ready condition timestamp (if and when available)\n- Control Plane's initialized condition timestamp (if and when available)\n- Machine's infrastructure ready condition timestamp (if and when available)\n- Machine's metadata creation timestamp\n\nDefaults to 10 minutes.\nIf you wish to disable this feature, set the value explicitly to 0.",
                        "type": "string"
                      },
                      "remediationTemplate": {
                        "description": "remediationTemplate is a reference to a remediation template\nprovided by an infrastructure provider.\n\nThis field is completely optional, when filled, the MachineHealthCheck controller\ncreates a new object from the template referenced and hands off remediation of the machine to\na controller that lives outside of Cluster API.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "unhealthyConditions": {
                        "description": "unhealthyConditions contains a list of the conditions that determine\nwhether a node is considered unhealthy. The conditions are combined in a\nlogical OR, i.e. if any of the conditions is met, the node is unhealthy.",
                        "type": "array",
                        "items": {
                          "description": "UnhealthyCondition represents a Node condition type and value with a timeout\nspecified as a duration.  When the named condition has been in the given\nstatus for at least the timeout value, a node is considered unhealthy.",
                          "type": "object",
                          "required": [
                            "status",
                            "timeout",
                            "type"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "minLength": 1
                            },
                            "timeout": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        }
                      },
                      "unhealthyRange": {
                        "description": "Any further remediation is only allowed if the number of machines selected by \"selector\" as not healthy\nis within the range of \"UnhealthyRange\". Takes precedence over MaxUnhealthy.\nEg. \"[3-5]\" - This means that remediation will be allowed only when:\n(a) there are at least 3 unhealthy machines (and)\n(b) there are at most 5 unhealthy machines",
                        "type": "string",
                        "pattern": "^\\[[0-9]+-[0-9]+\\]$"
                      }
                    }
                  },
                  "machineInfrastructure": {
                    "description": "machineInfrastructure defines the metadata and infrastructure information\nfor control plane machines.\n\nThis field is supported if and only if the control plane provider template\nreferenced above is Machine based and supports setting replicas.",
                    "type": "object",
                    "required": [
                      "ref"
                    ],
                    "properties": {
                      "ref": {
                        "description": "ref is a required reference to a custom resource\noffered by a provider.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "metadata": {
                    "description": "metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane\nif the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the\nControlPlane.\nAt runtime this metadata is merged with the corresponding metadata from the topology.\n\nThis field is supported if and only if the control plane provider template\nreferenced is Machine based.",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "namingStrategy": {
                    "description": "namingStrategy allows changing the naming pattern used when creating the control plane provider object.",
                    "type": "object",
                    "properties": {
                      "template": {
                        "description": "template defines the template to use for generating the name of the ControlPlane object.\nIf not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`.\nIf the templated string exceeds 63 characters, it will be trimmed to 58 characters and will\nget concatenated with a random suffix of length 5.\nThe templating mechanism provides the following arguments:\n* `.cluster.name`: The name of the cluster object.\n* `.random`: A random alphanumeric string, without vowels, of length 5.",
                        "type": "string"
                      }
                    }
                  },
                  "nodeDeletionTimeout": {
                    "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.\nNOTE: This value can be overridden while defining a Cluster.Topology.",
                    "type": "string"
                  },
                  "nodeDrainTimeout": {
                    "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`\nNOTE: This value can be overridden while defining a Cluster.Topology.",
                    "type": "string"
                  },
                  "nodeVolumeDetachTimeout": {
                    "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.\nNOTE: This value can be overridden while defining a Cluster.Topology.",
                    "type": "string"
                  },
                  "ref": {
                    "description": "ref is a required reference to a custom resource\noffered by a provider.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              },
              "infrastructure": {
                "description": "infrastructure is a reference to a provider-specific template that holds\nthe details for provisioning infrastructure specific cluster\nfor the underlying provider.\nThe underlying provider is responsible for the implementation\nof the template to an infrastructure cluster.",
                "type": "object",
                "required": [
                  "ref"
                ],
                "properties": {
                  "ref": {
                    "description": "ref is a required reference to a custom resource\noffered by a provider.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              },
              "patches": {
                "description": "patches defines the patches which are applied to customize\nreferenced templates of a ClusterClass.\nNote: Patches will be applied in the order of the array.",
                "type": "array",
                "items": {
                  "description": "ClusterClassPatch defines a patch which is applied to customize the referenced templates.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "definitions": {
                      "description": "definitions define inline patches.\nNote: Patches will be applied in the order of the array.\nNote: Exactly one of Definitions or External must be set.",
                      "type": "array",
                      "items": {
                        "description": "PatchDefinition defines a patch which is applied to customize the referenced templates.",
                        "type": "object",
                        "required": [
                          "jsonPatches",
                          "selector"
                        ],
                        "properties": {
                          "jsonPatches": {
                            "description": "jsonPatches defines the patches which should be applied on the templates\nmatching the selector.\nNote: Patches will be applied in the order of the array.",
                            "type": "array",
                            "items": {
                              "description": "JSONPatch defines a JSON patch.",
                              "type": "object",
                              "required": [
                                "op",
                                "path"
                              ],
                              "properties": {
                                "op": {
                                  "description": "op defines the operation of the patch.\nNote: Only `add`, `replace` and `remove` are supported.",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "path defines the path of the patch.\nNote: Only the spec of a template can be patched, thus the path has to start with /spec/.\nNote: For now the only allowed array modifications are `append` and `prepend`, i.e.:\n* for op: `add`: only index 0 (prepend) and - (append) are allowed\n* for op: `replace` or `remove`: no indexes are allowed",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "value defines the value of the patch.\nNote: Either Value or ValueFrom is required for add and replace\noperations. Only one of them is allowed to be set at the same time.\nNote: We have to use apiextensionsv1.JSON instead of our JSON type,\nbecause controller-tools has a hard-coded schema for apiextensionsv1.JSON\nwhich cannot be produced by another type (unset type field).\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111",
                                  "x-kubernetes-preserve-unknown-fields": true
                                },
                                "valueFrom": {
                                  "description": "valueFrom defines the value of the patch.\nNote: Either Value or ValueFrom is required for add and replace\noperations. Only one of them is allowed to be set at the same time.",
                                  "type": "object",
                                  "properties": {
                                    "template": {
                                      "description": "template is the Go template to be used to calculate the value.\nA template can reference variables defined in .spec.variables and builtin variables.\nNote: The template must evaluate to a valid YAML or JSON value.",
                                      "type": "string"
                                    },
                                    "variable": {
                                      "description": "variable is the variable to be used as value.\nVariable can be one of the variables defined in .spec.variables or a builtin variable.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "selector": {
                            "description": "selector defines on which templates the patch should be applied.",
                            "type": "object",
                            "required": [
                              "apiVersion",
                              "kind",
                              "matchResources"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "apiVersion filters templates by apiVersion.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "kind filters templates by kind.",
                                "type": "string"
                              },
                              "matchResources": {
                                "description": "matchResources selects templates based on where they are referenced.",
                                "type": "object",
                                "properties": {
                                  "controlPlane": {
                                    "description": "controlPlane selects templates referenced in .spec.ControlPlane.\nNote: this will match the controlPlane and also the controlPlane\nmachineInfrastructure (depending on the kind and apiVersion).",
                                    "type": "boolean"
                                  },
                                  "infrastructureCluster": {
                                    "description": "infrastructureCluster selects templates referenced in .spec.infrastructure.",
                                    "type": "boolean"
                                  },
                                  "machineDeploymentClass": {
                                    "description": "machineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in\n.spec.workers.machineDeployments.",
                                    "type": "object",
                                    "properties": {
                                      "names": {
                                        "description": "names selects templates by class names.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "machinePoolClass": {
                                    "description": "machinePoolClass selects templates referenced in specific MachinePoolClasses in\n.spec.workers.machinePools.",
                                    "type": "object",
                                    "properties": {
                                      "names": {
                                        "description": "names selects templates by class names.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": {
                      "description": "description is a human-readable description of this patch.",
                      "type": "string"
                    },
                    "enabledIf": {
                      "description": "enabledIf is a Go template to be used to calculate if a patch should be enabled.\nIt can reference variables defined in .spec.variables and builtin variables.\nThe patch will be enabled if the template evaluates to `true`, otherwise it will\nbe disabled.\nIf EnabledIf is not set, the patch will be enabled per default.",
                      "type": "string"
                    },
                    "external": {
                      "description": "external defines an external patch.\nNote: Exactly one of Definitions or External must be set.",
                      "type": "object",
                      "properties": {
                        "discoverVariablesExtension": {
                          "description": "discoverVariablesExtension references an extension which is called to discover variables.",
                          "type": "string"
                        },
                        "generateExtension": {
                          "description": "generateExtension references an extension which is called to generate patches.",
                          "type": "string"
                        },
                        "settings": {
                          "description": "settings defines key value pairs to be passed to the extensions.\nValues defined here take precedence over the values defined in the\ncorresponding ExtensionConfig.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "validateExtension": {
                          "description": "validateExtension references an extension which is called to validate the topology.",
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "description": "name of the patch.",
                      "type": "string"
                    }
                  }
                }
              },
              "variables": {
                "description": "variables defines the variables which can be configured\nin the Cluster topology and are then used in patches.",
                "type": "array",
                "items": {
                  "description": "ClusterClassVariable defines a variable which can\nbe configured in the Cluster topology and used in patches.",
                  "type": "object",
                  "required": [
                    "name",
                    "required",
                    "schema"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "metadata is the metadata of a variable.\nIt can be used to add additional data for higher level tools to\na ClusterClassVariable.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please use XMetadata in JSONSchemaProps instead.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "annotations is an unstructured key value map that can be used to store and\nretrieve arbitrary metadata.\nThey are not queryable.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) variables.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "description": "name of the variable.",
                      "type": "string"
                    },
                    "required": {
                      "description": "required specifies if the variable is required.\nNote: this applies to the variable as a whole and thus the\ntop-level object defined in the schema. If nested fields are\nrequired, this will be specified inside the schema.",
                      "type": "boolean"
                    },
                    "schema": {
                      "description": "schema defines the schema of the variable.",
                      "type": "object",
                      "required": [
                        "openAPIV3Schema"
                      ],
                      "properties": {
                        "openAPIV3Schema": {
                          "description": "openAPIV3Schema defines the schema of a variable via OpenAPI v3\nschema. The schema is a subset of the schema used in\nKubernetes CRDs.",
                          "type": "object",
                          "properties": {
                            "additionalProperties": {
                              "description": "additionalProperties specifies the schema of values in a map (keys are always strings).\nNOTE: Can only be set if type is object.\nNOTE: AdditionalProperties is mutually exclusive with Properties.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "allOf": {
                              "description": "allOf specifies that the variable must validate against all of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "anyOf": {
                              "description": "anyOf specifies that the variable must validate against one or more of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "default": {
                              "description": "default is the default value of the variable.\nNOTE: Can be set for all types.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "description": {
                              "description": "description is a human-readable description of this variable.",
                              "type": "string"
                            },
                            "enum": {
                              "description": "enum is the list of valid values of the variable.\nNOTE: Can be set for all types.",
                              "type": "array",
                              "items": {
                                "x-kubernetes-preserve-unknown-fields": true
                              }
                            },
                            "example": {
                              "description": "example is an example for this variable.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "exclusiveMaximum": {
                              "description": "exclusiveMaximum specifies if the Maximum is exclusive.\nNOTE: Can only be set if type is integer or number.",
                              "type": "boolean"
                            },
                            "exclusiveMinimum": {
                              "description": "exclusiveMinimum specifies if the Minimum is exclusive.\nNOTE: Can only be set if type is integer or number.",
                              "type": "boolean"
                            },
                            "format": {
                              "description": "format is an OpenAPI v3 format string. Unknown formats are ignored.\nFor a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)\nhttps://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go\nNOTE: Can only be set if type is string.",
                              "type": "string"
                            },
                            "items": {
                              "description": "items specifies fields of an array.\nNOTE: Can only be set if type is array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "maxItems": {
                              "description": "maxItems is the max length of an array variable.\nNOTE: Can only be set if type is array.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "maxLength": {
                              "description": "maxLength is the max length of a string variable.\nNOTE: Can only be set if type is string.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "maxProperties": {
                              "description": "maxProperties is the maximum amount of entries in a map or properties in an object.\nNOTE: Can only be set if type is object.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "maximum": {
                              "description": "maximum is the maximum of an integer or number variable.\nIf ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.\nIf ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.\nNOTE: Can only be set if type is integer or number.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "minItems": {
                              "description": "minItems is the min length of an array variable.\nNOTE: Can only be set if type is array.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "minLength": {
                              "description": "minLength is the min length of a string variable.\nNOTE: Can only be set if type is string.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "minProperties": {
                              "description": "minProperties is the minimum amount of entries in a map or properties in an object.\nNOTE: Can only be set if type is object.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "minimum": {
                              "description": "minimum is the minimum of an integer or number variable.\nIf ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.\nIf ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.\nNOTE: Can only be set if type is integer or number.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "not": {
                              "description": "not specifies that the variable must not validate against the subschema.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "oneOf": {
                              "description": "oneOf specifies that the variable must validate against exactly one of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "pattern": {
                              "description": "pattern is the regex which a string variable must match.\nNOTE: Can only be set if type is string.",
                              "type": "string"
                            },
                            "properties": {
                              "description": "properties specifies fields of an object.\nNOTE: Can only be set if type is object.\nNOTE: Properties is mutually exclusive with AdditionalProperties.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "required": {
                              "description": "required specifies which fields of an object are required.\nNOTE: Can only be set if type is object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "type is the type of the variable.\nValid values are: object, array, string, integer, number or boolean.",
                              "type": "string"
                            },
                            "uniqueItems": {
                              "description": "uniqueItems specifies if items in an array must be unique.\nNOTE: Can only be set if type is array.",
                              "type": "boolean"
                            },
                            "x-kubernetes-int-or-string": {
                              "description": "x-kubernetes-int-or-string specifies that this value is\neither an integer or a string. If this is true, an empty\ntype is allowed and type as child of anyOf is permitted\nif following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more",
                              "type": "boolean"
                            },
                            "x-kubernetes-preserve-unknown-fields": {
                              "description": "x-kubernetes-preserve-unknown-fields allows setting fields in a variable object\nwhich are not defined in the variable schema. This affects fields recursively,\nexcept if nested properties or additionalProperties are specified in the schema.",
                              "type": "boolean"
                            },
                            "x-kubernetes-validations": {
                              "description": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language.",
                              "type": "array",
                              "items": {
                                "description": "ValidationRule describes a validation rule written in the CEL expression language.",
                                "type": "object",
                                "required": [
                                  "rule"
                                ],
                                "properties": {
                                  "fieldPath": {
                                    "description": "fieldPath represents the field path returned when the validation fails.\nIt must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.\ne.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`\nIf the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`\nIt does not support list numeric index.\nIt supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.\nNumeric index of array is not supported.\nFor field name which contains special characters, use `['specialName']` to refer the field name.\ne.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`",
                                    "type": "string"
                                  },
                                  "message": {
                                    "description": "message represents the message displayed when validation fails. The message is required if the Rule contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"",
                                    "type": "string"
                                  },
                                  "messageExpression": {
                                    "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a rule, then messageExpression will be used if validation\nfails. If messageExpression results in a runtime error, the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.\nmessageExpression has access to all the same variables as the rule; the only difference is the return type.\nExample:\n\"x must be less than max (\"+string(self.max)+\")\"",
                                    "type": "string"
                                  },
                                  "reason": {
                                    "description": "reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.\nThe currently supported reasons are: \"FieldValueInvalid\", \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\".\nIf not set, default to use \"FieldValueInvalid\".\nAll future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.",
                                    "type": "string",
                                    "default": "FieldValueInvalid",
                                    "enum": [
                                      "FieldValueInvalid",
                                      "FieldValueForbidden",
                                      "FieldValueRequired",
                                      "FieldValueDuplicate"
                                    ]
                                  },
                                  "rule": {
                                    "description": "rule represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nThe Rule is scoped to the location of the x-kubernetes-validations extension in the schema.\nThe `self` variable in the CEL expression is bound to the scoped value.\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable\nvia `self.field` and field presence can be checked via `has(self.field)`.\nIf the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map\nare accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map\nare accessible via CEL macros and functions such as `self.all(...)`.\nIf the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and\nfunctions.\nIf the Rule is scoped to a scalar, `self` is bound to the scalar value.\nExamples:\n- Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"}\n- Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"}\n- Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL\nexpressions. This includes:\n- Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields.\n- Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a\n`transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`.\n\nTransition rules by default are applied only on UPDATE requests and are\nskipped if an old value could not be found.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-map-keys": [
                                "rule"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "x-metadata": {
                              "description": "x-metadata is the metadata of a variable or a nested field within a variable.\nIt can be used to add additional data for higher level tools.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "annotations is an unstructured key value map that can be used to store and\nretrieve arbitrary metadata.\nThey are not queryable.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) variables.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "workers": {
                "description": "workers describes the worker nodes for the cluster.\nIt is a collection of node types which can be used to create\nthe worker nodes of the cluster.",
                "type": "object",
                "properties": {
                  "machineDeployments": {
                    "description": "machineDeployments is a list of machine deployment classes that can be used to create\na set of worker nodes.",
                    "type": "array",
                    "items": {
                      "description": "MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster\nprovisioned using the `ClusterClass`.",
                      "type": "object",
                      "required": [
                        "class",
                        "template"
                      ],
                      "properties": {
                        "class": {
                          "description": "class denotes a type of worker node present in the cluster,\nthis name MUST be unique within a ClusterClass and can be referenced\nin the Cluster to create a managed MachineDeployment.",
                          "type": "string"
                        },
                        "failureDomain": {
                          "description": "failureDomain is the failure domain the machines will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "string"
                        },
                        "machineHealthCheck": {
                          "description": "machineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.",
                          "type": "object",
                          "properties": {
                            "maxUnhealthy": {
                              "description": "Any further remediation is only allowed if at most \"MaxUnhealthy\" machines selected by\n\"selector\" are not healthy.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "nodeStartupTimeout": {
                              "description": "nodeStartupTimeout allows to set the maximum time for MachineHealthCheck\nto consider a Machine unhealthy if a corresponding Node isn't associated\nthrough a `Spec.ProviderID` field.\n\nThe duration set in this field is compared to the greatest of:\n- Cluster's infrastructure ready condition timestamp (if and when available)\n- Control Plane's initialized condition timestamp (if and when available)\n- Machine's infrastructure ready condition timestamp (if and when available)\n- Machine's metadata creation timestamp\n\nDefaults to 10 minutes.\nIf you wish to disable this feature, set the value explicitly to 0.",
                              "type": "string"
                            },
                            "remediationTemplate": {
                              "description": "remediationTemplate is a reference to a remediation template\nprovided by an infrastructure provider.\n\nThis field is completely optional, when filled, the MachineHealthCheck controller\ncreates a new object from the template referenced and hands off remediation of the machine to\na controller that lives outside of Cluster API.",
                              "type": "object",
                              "properties": {
                                "apiVersion": {
                                  "description": "API version of the referent.",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                  "type": "string"
                                },
                                "resourceVersion": {
                                  "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "type": "string"
                                },
                                "uid": {
                                  "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "unhealthyConditions": {
                              "description": "unhealthyConditions contains a list of the conditions that determine\nwhether a node is considered unhealthy. The conditions are combined in a\nlogical OR, i.e. if any of the conditions is met, the node is unhealthy.",
                              "type": "array",
                              "items": {
                                "description": "UnhealthyCondition represents a Node condition type and value with a timeout\nspecified as a duration.  When the named condition has been in the given\nstatus for at least the timeout value, a node is considered unhealthy.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "timeout",
                                  "type"
                                ],
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "timeout": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                }
                              }
                            },
                            "unhealthyRange": {
                              "description": "Any further remediation is only allowed if the number of machines selected by \"selector\" as not healthy\nis within the range of \"UnhealthyRange\". Takes precedence over MaxUnhealthy.\nEg. \"[3-5]\" - This means that remediation will be allowed only when:\n(a) there are at least 3 unhealthy machines (and)\n(b) there are at most 5 unhealthy machines",
                              "type": "string",
                              "pattern": "^\\[[0-9]+-[0-9]+\\]$"
                            }
                          }
                        },
                        "minReadySeconds": {
                          "description": "Minimum number of seconds for which a newly created machine should\nbe ready.\nDefaults to 0 (machine will be considered available as soon as it\nis ready)\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "namingStrategy": {
                          "description": "namingStrategy allows changing the naming pattern used when creating the MachineDeployment.",
                          "type": "object",
                          "properties": {
                            "template": {
                              "description": "template defines the template to use for generating the name of the MachineDeployment object.\nIf not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`.\nIf the templated string exceeds 63 characters, it will be trimmed to 58 characters and will\nget concatenated with a random suffix of length 5.\nThe templating mechanism provides the following arguments:\n* `.cluster.name`: The name of the cluster object.\n* `.random`: A random alphanumeric string, without vowels, of length 5.\n* `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).",
                              "type": "string"
                            }
                          }
                        },
                        "nodeDeletionTimeout": {
                          "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "string"
                        },
                        "nodeDrainTimeout": {
                          "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "string"
                        },
                        "nodeVolumeDetachTimeout": {
                          "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "string"
                        },
                        "strategy": {
                          "description": "The deployment strategy to use to replace existing machines with\nnew ones.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.",
                          "type": "object",
                          "properties": {
                            "remediation": {
                              "description": "remediation controls the strategy of remediating unhealthy machines\nand how remediating operations should occur during the lifecycle of the dependant MachineSets.",
                              "type": "object",
                              "properties": {
                                "maxInFlight": {
                                  "description": "maxInFlight determines how many in flight remediations should happen at the same time.\n\nRemediation only happens on the MachineSet with the most current revision, while\nolder MachineSets (usually present during rollout operations) aren't allowed to remediate.\n\nNote: In general (independent of remediations), unhealthy machines are always\nprioritized during scale down operations over healthy ones.\n\nMaxInFlight can be set to a fixed number or a percentage.\nExample: when this is set to 20%, the MachineSet controller deletes at most 20% of\nthe desired replicas.\n\nIf not set, remediation is limited to all machines (bounded by replicas)\nunder the active MachineSet's management.",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            },
                            "rollingUpdate": {
                              "description": "Rolling update config params. Present only if\nMachineDeploymentStrategyType = RollingUpdate.",
                              "type": "object",
                              "properties": {
                                "deletePolicy": {
                                  "description": "deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.\nValid values are \"Random, \"Newest\", \"Oldest\"\nWhen no value is supplied, the default DeletePolicy of MachineSet is used",
                                  "type": "string",
                                  "enum": [
                                    "Random",
                                    "Newest",
                                    "Oldest"
                                  ]
                                },
                                "maxSurge": {
                                  "description": "The maximum number of machines that can be scheduled above the\ndesired number of machines.\nValue can be an absolute number (ex: 5) or a percentage of\ndesired machines (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 1.\nExample: when this is set to 30%, the new MachineSet can be scaled\nup immediately when the rolling update starts, such that the total\nnumber of old and new machines do not exceed 130% of desired\nmachines. Once old machines have been killed, new MachineSet can\nbe scaled up further, ensuring that total number of machines running\nat any time during the update is at most 130% of desired machines.",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "maxUnavailable": {
                                  "description": "The maximum number of machines that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired\nmachines (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 0.\nExample: when this is set to 30%, the old MachineSet can be scaled\ndown to 70% of desired machines immediately when the rolling update\nstarts. Once new machines are ready, old MachineSet can be scaled\ndown further, followed by scaling up the new MachineSet, ensuring\nthat the total number of machines available at all times\nduring the update is at least 70% of desired machines.",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            },
                            "type": {
                              "description": "type of deployment. Allowed values are RollingUpdate and OnDelete.\nThe default is RollingUpdate.",
                              "type": "string",
                              "enum": [
                                "RollingUpdate",
                                "OnDelete"
                              ]
                            }
                          }
                        },
                        "template": {
                          "description": "template is a local struct containing a collection of templates for creation of\nMachineDeployment objects representing a set of worker nodes.",
                          "type": "object",
                          "required": [
                            "bootstrap",
                            "infrastructure"
                          ],
                          "properties": {
                            "bootstrap": {
                              "description": "bootstrap contains the bootstrap template reference to be used\nfor the creation of worker Machines.",
                              "type": "object",
                              "required": [
                                "ref"
                              ],
                              "properties": {
                                "ref": {
                                  "description": "ref is a required reference to a custom resource\noffered by a provider.",
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "description": "API version of the referent.",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    },
                                    "resourceVersion": {
                                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                      "type": "string"
                                    },
                                    "uid": {
                                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "infrastructure": {
                              "description": "infrastructure contains the infrastructure template reference to be used\nfor the creation of worker Machines.",
                              "type": "object",
                              "required": [
                                "ref"
                              ],
                              "properties": {
                                "ref": {
                                  "description": "ref is a required reference to a custom resource\noffered by a provider.",
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "description": "API version of the referent.",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    },
                                    "resourceVersion": {
                                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                      "type": "string"
                                    },
                                    "uid": {
                                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "metadata": {
                              "description": "metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.\nAt runtime this metadata is merged with the corresponding metadata from the topology.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "class"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "machinePools": {
                    "description": "machinePools is a list of machine pool classes that can be used to create\na set of worker nodes.",
                    "type": "array",
                    "items": {
                      "description": "MachinePoolClass serves as a template to define a pool of worker nodes of the cluster\nprovisioned using `ClusterClass`.",
                      "type": "object",
                      "required": [
                        "class",
                        "template"
                      ],
                      "properties": {
                        "class": {
                          "description": "class denotes a type of machine pool present in the cluster,\nthis name MUST be unique within a ClusterClass and can be referenced\nin the Cluster to create a managed MachinePool.",
                          "type": "string"
                        },
                        "failureDomains": {
                          "description": "failureDomains is the list of failure domains the MachinePool should be attached to.\nMust match a key in the FailureDomains map stored on the cluster object.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "minReadySeconds": {
                          "description": "Minimum number of seconds for which a newly created machine pool should\nbe ready.\nDefaults to 0 (machine will be considered available as soon as it\nis ready)\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "namingStrategy": {
                          "description": "namingStrategy allows changing the naming pattern used when creating the MachinePool.",
                          "type": "object",
                          "properties": {
                            "template": {
                              "description": "template defines the template to use for generating the name of the MachinePool object.\nIf not defined, it will fallback to `{{ .cluster.name }}-{{ .machinePool.topologyName }}-{{ .random }}`.\nIf the templated string exceeds 63 characters, it will be trimmed to 58 characters and will\nget concatenated with a random suffix of length 5.\nThe templating mechanism provides the following arguments:\n* `.cluster.name`: The name of the cluster object.\n* `.random`: A random alphanumeric string, without vowels, of length 5.\n* `.machinePool.topologyName`: The name of the MachinePool topology (Cluster.spec.topology.workers.machinePools[].name).",
                              "type": "string"
                            }
                          }
                        },
                        "nodeDeletionTimeout": {
                          "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine Pool is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.",
                          "type": "string"
                        },
                        "nodeDrainTimeout": {
                          "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.",
                          "type": "string"
                        },
                        "nodeVolumeDetachTimeout": {
                          "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.\nNOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.",
                          "type": "string"
                        },
                        "template": {
                          "description": "template is a local struct containing a collection of templates for creation of\nMachinePools objects representing a pool of worker nodes.",
                          "type": "object",
                          "required": [
                            "bootstrap",
                            "infrastructure"
                          ],
                          "properties": {
                            "bootstrap": {
                              "description": "bootstrap contains the bootstrap template reference to be used\nfor the creation of the Machines in the MachinePool.",
                              "type": "object",
                              "required": [
                                "ref"
                              ],
                              "properties": {
                                "ref": {
                                  "description": "ref is a required reference to a custom resource\noffered by a provider.",
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "description": "API version of the referent.",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    },
                                    "resourceVersion": {
                                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                      "type": "string"
                                    },
                                    "uid": {
                                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "infrastructure": {
                              "description": "infrastructure contains the infrastructure template reference to be used\nfor the creation of the MachinePool.",
                              "type": "object",
                              "required": [
                                "ref"
                              ],
                              "properties": {
                                "ref": {
                                  "description": "ref is a required reference to a custom resource\noffered by a provider.",
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "description": "API version of the referent.",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    },
                                    "resourceVersion": {
                                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                      "type": "string"
                                    },
                                    "uid": {
                                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "metadata": {
                              "description": "metadata is the metadata applied to the MachinePool.\nAt runtime this metadata is merged with the corresponding metadata from the topology.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "labels": {
                                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "class"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          },
          "status": {
            "description": "ClusterClassStatus defines the observed state of the ClusterClass.",
            "type": "object",
            "properties": {
              "conditions": {
                "description": "conditions defines current observed state of the ClusterClass.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "observedGeneration": {
                "description": "observedGeneration is the latest generation observed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in ClusterClass's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "conditions represents the observations of a ClusterClass's current state.\nKnown condition types are VariablesReady, RefVersionsUpToDate, Paused.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              },
              "variables": {
                "description": "variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.",
                "type": "array",
                "items": {
                  "description": "ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.",
                  "type": "object",
                  "required": [
                    "definitions",
                    "name"
                  ],
                  "properties": {
                    "definitions": {
                      "description": "definitions is a list of definitions for a variable.",
                      "type": "array",
                      "items": {
                        "description": "ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.",
                        "type": "object",
                        "required": [
                          "from",
                          "required",
                          "schema"
                        ],
                        "properties": {
                          "from": {
                            "description": "from specifies the origin of the variable definition.\nThis will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass\nfor variables discovered from a DiscoverVariables runtime extensions.",
                            "type": "string"
                          },
                          "metadata": {
                            "description": "metadata is the metadata of a variable.\nIt can be used to add additional data for higher level tools to\na ClusterClassVariable.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion.",
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "description": "annotations is an unstructured key value map that can be used to store and\nretrieve arbitrary metadata.\nThey are not queryable.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labels": {
                                "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) variables.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "required": {
                            "description": "required specifies if the variable is required.\nNote: this applies to the variable as a whole and thus the\ntop-level object defined in the schema. If nested fields are\nrequired, this will be specified inside the schema.",
                            "type": "boolean"
                          },
                          "schema": {
                            "description": "schema defines the schema of the variable.",
                            "type": "object",
                            "required": [
                              "openAPIV3Schema"
                            ],
                            "properties": {
                              "openAPIV3Schema": {
                                "description": "openAPIV3Schema defines the schema of a variable via OpenAPI v3\nschema. The schema is a subset of the schema used in\nKubernetes CRDs.",
                                "type": "object",
                                "properties": {
                                  "additionalProperties": {
                                    "description": "additionalProperties specifies the schema of values in a map (keys are always strings).\nNOTE: Can only be set if type is object.\nNOTE: AdditionalProperties is mutually exclusive with Properties.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "allOf": {
                                    "description": "allOf specifies that the variable must validate against all of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "anyOf": {
                                    "description": "anyOf specifies that the variable must validate against one or more of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "default": {
                                    "description": "default is the default value of the variable.\nNOTE: Can be set for all types.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "description": {
                                    "description": "description is a human-readable description of this variable.",
                                    "type": "string"
                                  },
                                  "enum": {
                                    "description": "enum is the list of valid values of the variable.\nNOTE: Can be set for all types.",
                                    "type": "array",
                                    "items": {
                                      "x-kubernetes-preserve-unknown-fields": true
                                    }
                                  },
                                  "example": {
                                    "description": "example is an example for this variable.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "exclusiveMaximum": {
                                    "description": "exclusiveMaximum specifies if the Maximum is exclusive.\nNOTE: Can only be set if type is integer or number.",
                                    "type": "boolean"
                                  },
                                  "exclusiveMinimum": {
                                    "description": "exclusiveMinimum specifies if the Minimum is exclusive.\nNOTE: Can only be set if type is integer or number.",
                                    "type": "boolean"
                                  },
                                  "format": {
                                    "description": "format is an OpenAPI v3 format string. Unknown formats are ignored.\nFor a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)\nhttps://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go\nNOTE: Can only be set if type is string.",
                                    "type": "string"
                                  },
                                  "items": {
                                    "description": "items specifies fields of an array.\nNOTE: Can only be set if type is array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "maxItems": {
                                    "description": "maxItems is the max length of an array variable.\nNOTE: Can only be set if type is array.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "maxLength": {
                                    "description": "maxLength is the max length of a string variable.\nNOTE: Can only be set if type is string.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "maxProperties": {
                                    "description": "maxProperties is the maximum amount of entries in a map or properties in an object.\nNOTE: Can only be set if type is object.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "maximum": {
                                    "description": "maximum is the maximum of an integer or number variable.\nIf ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.\nIf ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.\nNOTE: Can only be set if type is integer or number.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "minItems": {
                                    "description": "minItems is the min length of an array variable.\nNOTE: Can only be set if type is array.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "minLength": {
                                    "description": "minLength is the min length of a string variable.\nNOTE: Can only be set if type is string.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "minProperties": {
                                    "description": "minProperties is the minimum amount of entries in a map or properties in an object.\nNOTE: Can only be set if type is object.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "minimum": {
                                    "description": "minimum is the minimum of an integer or number variable.\nIf ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.\nIf ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.\nNOTE: Can only be set if type is integer or number.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "not": {
                                    "description": "not specifies that the variable must not validate against the subschema.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "oneOf": {
                                    "description": "oneOf specifies that the variable must validate against exactly one of the subschemas in the array.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "pattern": {
                                    "description": "pattern is the regex which a string variable must match.\nNOTE: Can only be set if type is string.",
                                    "type": "string"
                                  },
                                  "properties": {
                                    "description": "properties specifies fields of an object.\nNOTE: Can only be set if type is object.\nNOTE: Properties is mutually exclusive with AdditionalProperties.\nNOTE: This field uses PreserveUnknownFields and Schemaless,\nbecause recursive validation is not possible.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "required": {
                                    "description": "required specifies which fields of an object are required.\nNOTE: Can only be set if type is object.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "type": {
                                    "description": "type is the type of the variable.\nValid values are: object, array, string, integer, number or boolean.",
                                    "type": "string"
                                  },
                                  "uniqueItems": {
                                    "description": "uniqueItems specifies if items in an array must be unique.\nNOTE: Can only be set if type is array.",
                                    "type": "boolean"
                                  },
                                  "x-kubernetes-int-or-string": {
                                    "description": "x-kubernetes-int-or-string specifies that this value is\neither an integer or a string. If this is true, an empty\ntype is allowed and type as child of anyOf is permitted\nif following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more",
                                    "type": "boolean"
                                  },
                                  "x-kubernetes-preserve-unknown-fields": {
                                    "description": "x-kubernetes-preserve-unknown-fields allows setting fields in a variable object\nwhich are not defined in the variable schema. This affects fields recursively,\nexcept if nested properties or additionalProperties are specified in the schema.",
                                    "type": "boolean"
                                  },
                                  "x-kubernetes-validations": {
                                    "description": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language.",
                                    "type": "array",
                                    "items": {
                                      "description": "ValidationRule describes a validation rule written in the CEL expression language.",
                                      "type": "object",
                                      "required": [
                                        "rule"
                                      ],
                                      "properties": {
                                        "fieldPath": {
                                          "description": "fieldPath represents the field path returned when the validation fails.\nIt must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.\ne.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`\nIf the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`\nIt does not support list numeric index.\nIt supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.\nNumeric index of array is not supported.\nFor field name which contains special characters, use `['specialName']` to refer the field name.\ne.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`",
                                          "type": "string"
                                        },
                                        "message": {
                                          "description": "message represents the message displayed when validation fails. The message is required if the Rule contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"",
                                          "type": "string"
                                        },
                                        "messageExpression": {
                                          "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a rule, then messageExpression will be used if validation\nfails. If messageExpression results in a runtime error, the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.\nmessageExpression has access to all the same variables as the rule; the only difference is the return type.\nExample:\n\"x must be less than max (\"+string(self.max)+\")\"",
                                          "type": "string"
                                        },
                                        "reason": {
                                          "description": "reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.\nThe currently supported reasons are: \"FieldValueInvalid\", \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\".\nIf not set, default to use \"FieldValueInvalid\".\nAll future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.",
                                          "type": "string",
                                          "default": "FieldValueInvalid",
                                          "enum": [
                                            "FieldValueInvalid",
                                            "FieldValueForbidden",
                                            "FieldValueRequired",
                                            "FieldValueDuplicate"
                                          ]
                                        },
                                        "rule": {
                                          "description": "rule represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nThe Rule is scoped to the location of the x-kubernetes-validations extension in the schema.\nThe `self` variable in the CEL expression is bound to the scoped value.\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable\nvia `self.field` and field presence can be checked via `has(self.field)`.\nIf the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map\nare accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map\nare accessible via CEL macros and functions such as `self.all(...)`.\nIf the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and\nfunctions.\nIf the Rule is scoped to a scalar, `self` is bound to the scalar value.\nExamples:\n- Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"}\n- Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"}\n- Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL\nexpressions. This includes:\n- Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields.\n- Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a\n`transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`.\n\nTransition rules by default are applied only on UPDATE requests and are\nskipped if an old value could not be found.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "rule"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "x-metadata": {
                                    "description": "x-metadata is the metadata of a variable or a nested field within a variable.\nIt can be used to add additional data for higher level tools.",
                                    "type": "object",
                                    "properties": {
                                      "annotations": {
                                        "description": "annotations is an unstructured key value map that can be used to store and\nretrieve arbitrary metadata.\nThey are not queryable.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "labels": {
                                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) variables.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "definitionsConflict": {
                      "description": "definitionsConflict specifies whether or not there are conflicting definitions for a single variable name.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "name is the name of the variable.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "ClusterClass",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.ClusterClassList": {
        "description": "ClusterClassList is a list of ClusterClass",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of clusterclasses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.ClusterClass"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "ClusterClassList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.ClusterList": {
        "description": "ClusterList is a list of Cluster",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of clusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Cluster"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "ClusterList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.Machine": {
        "description": "Machine is the Schema for the machines API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "MachineSpec defines the desired state of Machine.",
            "type": "object",
            "required": [
              "bootstrap",
              "clusterName",
              "infrastructureRef"
            ],
            "properties": {
              "bootstrap": {
                "description": "bootstrap is a reference to a local struct which encapsulates\nfields to configure the Machine’s bootstrapping mechanism.",
                "type": "object",
                "properties": {
                  "configRef": {
                    "description": "configRef is a reference to a bootstrap provider-specific resource\nthat holds configuration details. The reference is optional to\nallow users/operators to specify Bootstrap.DataSecretName without\nthe need of a controller.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "dataSecretName": {
                    "description": "dataSecretName is the name of the secret that stores the bootstrap data script.\nIf nil, the Machine should remain in the Pending state.",
                    "type": "string"
                  }
                }
              },
              "clusterName": {
                "description": "clusterName is the name of the Cluster this object belongs to.",
                "type": "string",
                "minLength": 1
              },
              "failureDomain": {
                "description": "failureDomain is the failure domain the machine will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                "type": "string"
              },
              "infrastructureRef": {
                "description": "infrastructureRef is a required reference to a custom resource\noffered by an infrastructure provider.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "nodeDeletionTimeout": {
                "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                "type": "string"
              },
              "nodeDrainTimeout": {
                "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                "type": "string"
              },
              "nodeVolumeDetachTimeout": {
                "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                "type": "string"
              },
              "providerID": {
                "description": "providerID is the identification ID of the machine provided by the provider.\nThis field must match the provider ID as seen on the node object corresponding to this machine.\nThis field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler\nwith cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out\nmachines at provider which could not get registered as Kubernetes nodes. With cluster-api as a\ngeneric out-of-tree provider for autoscaler, this field is required by autoscaler to be\nable to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver\nand then a comparison is done to find out unregistered machines and are marked for delete.\nThis field will be set by the actuators and consumed by higher level entities like autoscaler that will\nbe interfacing with cluster-api as generic provider.",
                "type": "string"
              },
              "readinessGates": {
                "description": "readinessGates specifies additional conditions to include when evaluating Machine Ready condition.\n\nThis field can be used e.g. by Cluster API control plane providers to extend the semantic of the\nReady condition for the Machine they control, like the kubeadm control provider adding ReadinessGates\nfor the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.\n\nAnother example are external controllers, e.g. responsible to install special software/hardware on the Machines;\nthey can include the status of those components with a new condition and add this condition to ReadinessGates.\n\nNOTE: This field is considered only for computing v1beta2 conditions.\nNOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those\nreadiness gates condition are reporting the same message, when computing the Machine's Ready condition those\nreadinessGates will be replaced by a single entry reporting \"Control plane components: \" + message.\nThis helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).",
                "type": "array",
                "maxItems": 32,
                "items": {
                  "description": "MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.",
                  "type": "object",
                  "required": [
                    "conditionType"
                  ],
                  "properties": {
                    "conditionType": {
                      "description": "conditionType refers to a positive polarity condition (status true means good) with matching type in the Machine's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.",
                      "type": "string",
                      "maxLength": 316,
                      "minLength": 1,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  }
                },
                "x-kubernetes-list-map-keys": [
                  "conditionType"
                ],
                "x-kubernetes-list-type": "map"
              },
              "version": {
                "description": "version defines the desired Kubernetes version.\nThis field is meant to be optionally used by bootstrap providers.",
                "type": "string"
              }
            }
          },
          "status": {
            "description": "MachineStatus defines the observed state of Machine.",
            "type": "object",
            "properties": {
              "addresses": {
                "description": "addresses is a list of addresses assigned to the machine.\nThis field is copied from the infrastructure provider reference.",
                "type": "array",
                "items": {
                  "description": "MachineAddress contains information for the node's address.",
                  "type": "object",
                  "required": [
                    "address",
                    "type"
                  ],
                  "properties": {
                    "address": {
                      "description": "The machine address.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.",
                      "type": "string"
                    }
                  }
                }
              },
              "bootstrapReady": {
                "description": "bootstrapReady is the state of the bootstrap provider.",
                "type": "boolean"
              },
              "certificatesExpiryDate": {
                "description": "certificatesExpiryDate is the expiry date of the machine certificates.\nThis value is only set for control plane machines.",
                "type": "string",
                "format": "date-time"
              },
              "conditions": {
                "description": "conditions defines current service state of the Machine.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "deletion": {
                "description": "deletion contains information relating to removal of the Machine.\nOnly present when the Machine has a deletionTimestamp and drain or wait for volume detach started.",
                "type": "object",
                "properties": {
                  "nodeDrainStartTime": {
                    "description": "nodeDrainStartTime is the time when the drain of the node started and is used to determine\nif the NodeDrainTimeout is exceeded.\nOnly present when the Machine has a deletionTimestamp and draining the node had been started.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "waitForNodeVolumeDetachStartTime": {
                    "description": "waitForNodeVolumeDetachStartTime is the time when waiting for volume detachment started\nand is used to determine if the NodeVolumeDetachTimeout is exceeded.\nDetaching volumes from nodes is usually done by CSI implementations and the current state\nis observed from the node's `.Status.VolumesAttached` field.\nOnly present when the Machine has a deletionTimestamp and waiting for volume detachments had been started.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "failureMessage": {
                "description": "failureMessage will be set in the event that there is a terminal problem\nreconciling the Machine and will contain a more verbose string suitable\nfor logging and human consumption.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the Machine's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of Machines\ncan be added as events to the Machine object and/or logged in the\ncontroller's output.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "failureReason": {
                "description": "failureReason will be set in the event that there is a terminal problem\nreconciling the Machine and will contain a succinct value suitable\nfor machine interpretation.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the Machine's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of Machines\ncan be added as events to the Machine object and/or logged in the\ncontroller's output.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "infrastructureReady": {
                "description": "infrastructureReady is the state of the infrastructure provider.",
                "type": "boolean"
              },
              "lastUpdated": {
                "description": "lastUpdated identifies when the phase of the Machine last transitioned.",
                "type": "string",
                "format": "date-time"
              },
              "nodeInfo": {
                "description": "nodeInfo is a set of ids/uuids to uniquely identify the node.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#info",
                "type": "object",
                "required": [
                  "architecture",
                  "bootID",
                  "containerRuntimeVersion",
                  "kernelVersion",
                  "kubeProxyVersion",
                  "kubeletVersion",
                  "machineID",
                  "operatingSystem",
                  "osImage",
                  "systemUUID"
                ],
                "properties": {
                  "architecture": {
                    "description": "The Architecture reported by the node",
                    "type": "string"
                  },
                  "bootID": {
                    "description": "Boot ID reported by the node.",
                    "type": "string"
                  },
                  "containerRuntimeVersion": {
                    "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).",
                    "type": "string"
                  },
                  "kernelVersion": {
                    "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
                    "type": "string"
                  },
                  "kubeProxyVersion": {
                    "description": "Deprecated: KubeProxy Version reported by the node.",
                    "type": "string"
                  },
                  "kubeletVersion": {
                    "description": "Kubelet Version reported by the node.",
                    "type": "string"
                  },
                  "machineID": {
                    "description": "MachineID reported by the node. For unique machine identification\nin the cluster this field is preferred. Learn more from man(5)\nmachine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
                    "type": "string"
                  },
                  "operatingSystem": {
                    "description": "The Operating System reported by the node",
                    "type": "string"
                  },
                  "osImage": {
                    "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
                    "type": "string"
                  },
                  "systemUUID": {
                    "description": "SystemUUID reported by the node. For unique machine identification\nMachineID is preferred. This field is specific to Red Hat hosts\nhttps://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
                    "type": "string"
                  }
                }
              },
              "nodeRef": {
                "description": "nodeRef will point to the corresponding Node if it exists.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "observedGeneration": {
                "description": "observedGeneration is the latest generation observed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "phase": {
                "description": "phase represents the current phase of machine actuation.\nE.g. Pending, Running, Terminating, Failed etc.",
                "type": "string"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in Machine's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "conditions represents the observations of a Machine's current state.\nKnown condition types are Available, Ready, UpToDate, BootstrapConfigReady, InfrastructureReady, NodeReady,\nNodeHealthy, Deleting, Paused.\nIf a MachineHealthCheck is targeting this machine, also HealthCheckSucceeded, OwnerRemediated conditions are added.\nAdditionally control plane Machines controlled by KubeadmControlPlane will have following additional conditions:\nAPIServerPodHealthy, ControllerManagerPodHealthy, SchedulerPodHealthy, EtcdPodHealthy, EtcdMemberHealthy.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "Machine",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineDeployment": {
        "description": "MachineDeployment is the Schema for the machinedeployments API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "MachineDeploymentSpec defines the desired state of MachineDeployment.",
            "type": "object",
            "required": [
              "clusterName",
              "selector",
              "template"
            ],
            "properties": {
              "clusterName": {
                "description": "clusterName is the name of the Cluster this object belongs to.",
                "type": "string",
                "minLength": 1
              },
              "minReadySeconds": {
                "description": "minReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available.\nDefaults to 0 (machine will be considered available as soon as the Node is ready)",
                "type": "integer",
                "format": "int32"
              },
              "paused": {
                "description": "Indicates that the deployment is paused.",
                "type": "boolean"
              },
              "progressDeadlineSeconds": {
                "description": "The maximum time in seconds for a deployment to make progress before it\nis considered to be failed. The deployment controller will continue to\nprocess failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status. Note that progress will\nnot be estimated during the time a deployment is paused. Defaults to 600s.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/11470 for more details.",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "Number of desired machines.\nThis is a pointer to distinguish between explicit zero and not specified.\n\nDefaults to:\n* if the Kubernetes autoscaler min size and max size annotations are set:\n  - if it's a new MachineDeployment, use min size\n  - if the replicas field of the old MachineDeployment is < min size, use min size\n  - if the replicas field of the old MachineDeployment is > max size, use max size\n  - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD\n* otherwise use 1\nNote: Defaulting will be run whenever the replicas field is not set:\n* A new MachineDeployment is created with replicas not set.\n* On an existing MachineDeployment the replicas field was first set and is now unset.\nThose cases are especially relevant for the following Kubernetes autoscaler use cases:\n* A new MachineDeployment is created and replicas should be managed by the autoscaler\n* An existing MachineDeployment which initially wasn't controlled by the autoscaler\n  should be later controlled by the autoscaler",
                "type": "integer",
                "format": "int32"
              },
              "revisionHistoryLimit": {
                "description": "The number of old MachineSets to retain to allow rollback.\nThis is a pointer to distinguish between explicit zero and not specified.\nDefaults to 1.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10479 for more details.",
                "type": "integer",
                "format": "int32"
              },
              "rolloutAfter": {
                "description": "rolloutAfter is a field to indicate a rollout should be performed\nafter the specified time even if no changes have been made to the\nMachineDeployment.\nExample: In the YAML the time can be specified in the RFC3339 format.\nTo specify the rolloutAfter target as March 9, 2023, at 9 am UTC\nuse \"2023-03-09T09:00:00Z\".",
                "type": "string",
                "format": "date-time"
              },
              "selector": {
                "description": "Label selector for machines. Existing MachineSets whose machines are\nselected by this will be the ones affected by this deployment.\nIt must match the machine template's labels.",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "strategy": {
                "description": "The deployment strategy to use to replace existing machines with\nnew ones.",
                "type": "object",
                "properties": {
                  "remediation": {
                    "description": "remediation controls the strategy of remediating unhealthy machines\nand how remediating operations should occur during the lifecycle of the dependant MachineSets.",
                    "type": "object",
                    "properties": {
                      "maxInFlight": {
                        "description": "maxInFlight determines how many in flight remediations should happen at the same time.\n\nRemediation only happens on the MachineSet with the most current revision, while\nolder MachineSets (usually present during rollout operations) aren't allowed to remediate.\n\nNote: In general (independent of remediations), unhealthy machines are always\nprioritized during scale down operations over healthy ones.\n\nMaxInFlight can be set to a fixed number or a percentage.\nExample: when this is set to 20%, the MachineSet controller deletes at most 20% of\nthe desired replicas.\n\nIf not set, remediation is limited to all machines (bounded by replicas)\nunder the active MachineSet's management.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "rollingUpdate": {
                    "description": "Rolling update config params. Present only if\nMachineDeploymentStrategyType = RollingUpdate.",
                    "type": "object",
                    "properties": {
                      "deletePolicy": {
                        "description": "deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.\nValid values are \"Random, \"Newest\", \"Oldest\"\nWhen no value is supplied, the default DeletePolicy of MachineSet is used",
                        "type": "string",
                        "enum": [
                          "Random",
                          "Newest",
                          "Oldest"
                        ]
                      },
                      "maxSurge": {
                        "description": "The maximum number of machines that can be scheduled above the\ndesired number of machines.\nValue can be an absolute number (ex: 5) or a percentage of\ndesired machines (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 1.\nExample: when this is set to 30%, the new MachineSet can be scaled\nup immediately when the rolling update starts, such that the total\nnumber of old and new machines do not exceed 130% of desired\nmachines. Once old machines have been killed, new MachineSet can\nbe scaled up further, ensuring that total number of machines running\nat any time during the update is at most 130% of desired machines.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "maxUnavailable": {
                        "description": "The maximum number of machines that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired\nmachines (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 0.\nExample: when this is set to 30%, the old MachineSet can be scaled\ndown to 70% of desired machines immediately when the rolling update\nstarts. Once new machines are ready, old MachineSet can be scaled\ndown further, followed by scaling up the new MachineSet, ensuring\nthat the total number of machines available at all times\nduring the update is at least 70% of desired machines.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "type": {
                    "description": "type of deployment. Allowed values are RollingUpdate and OnDelete.\nThe default is RollingUpdate.",
                    "type": "string",
                    "enum": [
                      "RollingUpdate",
                      "OnDelete"
                    ]
                  }
                }
              },
              "template": {
                "description": "template describes the machines that will be created.",
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the desired behavior of the machine.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                    "type": "object",
                    "required": [
                      "bootstrap",
                      "clusterName",
                      "infrastructureRef"
                    ],
                    "properties": {
                      "bootstrap": {
                        "description": "bootstrap is a reference to a local struct which encapsulates\nfields to configure the Machine’s bootstrapping mechanism.",
                        "type": "object",
                        "properties": {
                          "configRef": {
                            "description": "configRef is a reference to a bootstrap provider-specific resource\nthat holds configuration details. The reference is optional to\nallow users/operators to specify Bootstrap.DataSecretName without\nthe need of a controller.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "API version of the referent.",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": "string"
                              },
                              "resourceVersion": {
                                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                "type": "string"
                              },
                              "uid": {
                                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSecretName": {
                            "description": "dataSecretName is the name of the secret that stores the bootstrap data script.\nIf nil, the Machine should remain in the Pending state.",
                            "type": "string"
                          }
                        }
                      },
                      "clusterName": {
                        "description": "clusterName is the name of the Cluster this object belongs to.",
                        "type": "string",
                        "minLength": 1
                      },
                      "failureDomain": {
                        "description": "failureDomain is the failure domain the machine will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                        "type": "string"
                      },
                      "infrastructureRef": {
                        "description": "infrastructureRef is a required reference to a custom resource\noffered by an infrastructure provider.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "nodeDeletionTimeout": {
                        "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                        "type": "string"
                      },
                      "nodeDrainTimeout": {
                        "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                        "type": "string"
                      },
                      "nodeVolumeDetachTimeout": {
                        "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                        "type": "string"
                      },
                      "providerID": {
                        "description": "providerID is the identification ID of the machine provided by the provider.\nThis field must match the provider ID as seen on the node object corresponding to this machine.\nThis field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler\nwith cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out\nmachines at provider which could not get registered as Kubernetes nodes. With cluster-api as a\ngeneric out-of-tree provider for autoscaler, this field is required by autoscaler to be\nable to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver\nand then a comparison is done to find out unregistered machines and are marked for delete.\nThis field will be set by the actuators and consumed by higher level entities like autoscaler that will\nbe interfacing with cluster-api as generic provider.",
                        "type": "string"
                      },
                      "readinessGates": {
                        "description": "readinessGates specifies additional conditions to include when evaluating Machine Ready condition.\n\nThis field can be used e.g. by Cluster API control plane providers to extend the semantic of the\nReady condition for the Machine they control, like the kubeadm control provider adding ReadinessGates\nfor the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.\n\nAnother example are external controllers, e.g. responsible to install special software/hardware on the Machines;\nthey can include the status of those components with a new condition and add this condition to ReadinessGates.\n\nNOTE: This field is considered only for computing v1beta2 conditions.\nNOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those\nreadiness gates condition are reporting the same message, when computing the Machine's Ready condition those\nreadinessGates will be replaced by a single entry reporting \"Control plane components: \" + message.\nThis helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).",
                        "type": "array",
                        "maxItems": 32,
                        "items": {
                          "description": "MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.",
                          "type": "object",
                          "required": [
                            "conditionType"
                          ],
                          "properties": {
                            "conditionType": {
                              "description": "conditionType refers to a positive polarity condition (status true means good) with matching type in the Machine's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.",
                              "type": "string",
                              "maxLength": 316,
                              "minLength": 1,
                              "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "conditionType"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "version": {
                        "description": "version defines the desired Kubernetes version.\nThis field is meant to be optionally used by bootstrap providers.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "MachineDeploymentStatus defines the observed state of MachineDeployment.",
            "type": "object",
            "properties": {
              "availableReplicas": {
                "description": "Total number of available machines (ready for at least minReadySeconds)\ntargeted by this deployment.",
                "type": "integer",
                "format": "int32"
              },
              "conditions": {
                "description": "conditions defines current service state of the MachineDeployment.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "observedGeneration": {
                "description": "The generation observed by the deployment controller.",
                "type": "integer",
                "format": "int64"
              },
              "phase": {
                "description": "phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).",
                "type": "string"
              },
              "readyReplicas": {
                "description": "Total number of ready machines targeted by this deployment.",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "Total number of non-terminated machines targeted by this deployment\n(their labels match the selector).",
                "type": "integer",
                "format": "int32"
              },
              "selector": {
                "description": "selector is the same as the label selector but in the string format to avoid introspection\nby clients. The string will be in the same format as the query-param syntax.\nMore info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors",
                "type": "string"
              },
              "unavailableReplicas": {
                "description": "Total number of unavailable machines targeted by this deployment.\nThis is the total number of machines that are still required for\nthe deployment to have 100% available capacity. They may either\nbe machines that are running but not yet available or machines\nthat still have not been created.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "integer",
                "format": "int32"
              },
              "updatedReplicas": {
                "description": "Total number of non-terminated machines targeted by this deployment\nthat have the desired template spec.",
                "type": "integer",
                "format": "int32"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in MachineDeployment's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "availableReplicas": {
                    "description": "availableReplicas is the number of available replicas for this MachineDeployment. A machine is considered available when Machine's Available condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "conditions": {
                    "description": "conditions represents the observations of a MachineDeployment's current state.\nKnown condition types are Available, MachinesReady, MachinesUpToDate, ScalingUp, ScalingDown, Remediating, Deleting, Paused.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "readyReplicas": {
                    "description": "readyReplicas is the number of ready replicas for this MachineDeployment. A machine is considered ready when Machine's Ready condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "upToDateReplicas": {
                    "description": "upToDateReplicas is the number of up-to-date replicas targeted by this deployment. A machine is considered up-to-date when Machine's UpToDate condition is true.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineDeployment",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineDeploymentList": {
        "description": "MachineDeploymentList is a list of MachineDeployment",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machinedeployments. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDeployment"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineDeploymentList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineDrainRule": {
        "description": "MachineDrainRule is the Schema for the MachineDrainRule API.",
        "type": "object",
        "required": [
          "metadata",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "spec defines the spec of a MachineDrainRule.",
            "type": "object",
            "required": [
              "drain"
            ],
            "properties": {
              "drain": {
                "description": "drain configures if and how Pods are drained.",
                "type": "object",
                "required": [
                  "behavior"
                ],
                "properties": {
                  "behavior": {
                    "description": "behavior defines the drain behavior.\nCan be either \"Drain\" or \"Skip\".\n\"Drain\" means that the Pods to which this MachineDrainRule applies will be drained.\nIf behavior is set to \"Drain\" the order in which Pods are drained can be configured\nwith the order field. When draining Pods of a Node the Pods will be grouped by order\nand one group after another will be drained (by increasing order). Cluster API will\nwait until all Pods of a group are terminated / removed from the Node before starting\nwith the next group.\n\"Skip\" means that the Pods to which this MachineDrainRule applies will be skipped during drain.",
                    "type": "string",
                    "enum": [
                      "Drain",
                      "Skip"
                    ]
                  },
                  "order": {
                    "description": "order defines the order in which Pods are drained.\nPods with higher order are drained after Pods with lower order.\norder can only be set if behavior is set to \"Drain\".\nIf order is not set, 0 will be used.\nValid values for order are from -2147483648 to 2147483647 (inclusive).",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "machines": {
                "description": "machines defines to which Machines this MachineDrainRule should be applied.\n\nIf machines is not set, the MachineDrainRule applies to all Machines in the Namespace.\nIf machines contains multiple selectors, the results are ORed.\nWithin a single Machine selector the results of selector and clusterSelector are ANDed.\nMachines will be selected from all Clusters in the Namespace unless otherwise\nrestricted with the clusterSelector.\n\nExample: Selects control plane Machines in all Clusters or\n         Machines with label \"os\" == \"linux\" in Clusters with label\n         \"stage\" == \"production\".\n\n - selector:\n     matchExpressions:\n     - key: cluster.x-k8s.io/control-plane\n       operator: Exists\n - selector:\n     matchLabels:\n       os: linux\n   clusterSelector:\n     matchExpressions:\n     - key: stage\n       operator: In\n       values:\n       - production",
                "type": "array",
                "maxItems": 32,
                "minItems": 1,
                "items": {
                  "description": "MachineDrainRuleMachineSelector defines to which Machines this MachineDrainRule should be applied.",
                  "type": "object",
                  "minProperties": 1,
                  "properties": {
                    "clusterSelector": {
                      "description": "clusterSelector is a label selector which selects Machines by the labels of\ntheir Clusters.\nThis field follows standard label selector semantics; if not present or\nempty, it selects Machines of all Clusters.\n\nIf selector is also set, then the selector as a whole selects\nMachines matching selector belonging to Clusters selected by clusterSelector.\nIf selector is not set, it selects all Machines belonging to Clusters\nselected by clusterSelector.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "selector": {
                      "description": "selector is a label selector which selects Machines by their labels.\nThis field follows standard label selector semantics; if not present or\nempty, it selects all Machines.\n\nIf clusterSelector is also set, then the selector as a whole selects\nMachines matching selector belonging to Clusters selected by clusterSelector.\nIf clusterSelector is not set, it selects all Machines matching selector in\nall Clusters.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "pods": {
                "description": "pods defines to which Pods this MachineDrainRule should be applied.\n\nIf pods is not set, the MachineDrainRule applies to all Pods in all Namespaces.\nIf pods contains multiple selectors, the results are ORed.\nWithin a single Pod selector the results of selector and namespaceSelector are ANDed.\nPods will be selected from all Namespaces unless otherwise\nrestricted with the namespaceSelector.\n\nExample: Selects Pods with label \"app\" == \"logging\" in all Namespaces or\n         Pods with label \"app\" == \"prometheus\" in the \"monitoring\"\n         Namespace.\n\n - selector:\n     matchExpressions:\n     - key: app\n       operator: In\n       values:\n       - logging\n - selector:\n     matchLabels:\n       app: prometheus\n   namespaceSelector:\n     matchLabels:\n       kubernetes.io/metadata.name: monitoring",
                "type": "array",
                "maxItems": 32,
                "minItems": 1,
                "items": {
                  "description": "MachineDrainRulePodSelector defines to which Pods this MachineDrainRule should be applied.",
                  "type": "object",
                  "minProperties": 1,
                  "properties": {
                    "namespaceSelector": {
                      "description": "namespaceSelector is a label selector which selects Pods by the labels of\ntheir Namespaces.\nThis field follows standard label selector semantics; if not present or\nempty, it selects Pods of all Namespaces.\n\nIf selector is also set, then the selector as a whole selects\nPods matching selector in Namespaces selected by namespaceSelector.\nIf selector is not set, it selects all Pods in Namespaces selected by\nnamespaceSelector.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "selector": {
                      "description": "selector is a label selector which selects Pods by their labels.\nThis field follows standard label selector semantics; if not present or\nempty, it selects all Pods.\n\nIf namespaceSelector is also set, then the selector as a whole selects\nPods matching selector in Namespaces selected by namespaceSelector.\nIf namespaceSelector is not set, it selects all Pods matching selector in\nall Namespaces.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineDrainRule",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineDrainRuleList": {
        "description": "MachineDrainRuleList is a list of MachineDrainRule",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machinedrainrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineDrainRule"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineDrainRuleList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineHealthCheck": {
        "description": "MachineHealthCheck is the Schema for the machinehealthchecks API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "Specification of machine health check policy",
            "type": "object",
            "required": [
              "clusterName",
              "selector"
            ],
            "properties": {
              "clusterName": {
                "description": "clusterName is the name of the Cluster this object belongs to.",
                "type": "string",
                "minLength": 1
              },
              "maxUnhealthy": {
                "description": "Any further remediation is only allowed if at most \"MaxUnhealthy\" machines selected by\n\"selector\" are not healthy.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10722 for more details.",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              },
              "nodeStartupTimeout": {
                "description": "nodeStartupTimeout allows to set the maximum time for MachineHealthCheck\nto consider a Machine unhealthy if a corresponding Node isn't associated\nthrough a `Spec.ProviderID` field.\n\nThe duration set in this field is compared to the greatest of:\n- Cluster's infrastructure ready condition timestamp (if and when available)\n- Control Plane's initialized condition timestamp (if and when available)\n- Machine's infrastructure ready condition timestamp (if and when available)\n- Machine's metadata creation timestamp\n\nDefaults to 10 minutes.\nIf you wish to disable this feature, set the value explicitly to 0.",
                "type": "string"
              },
              "remediationTemplate": {
                "description": "remediationTemplate is a reference to a remediation template\nprovided by an infrastructure provider.\n\nThis field is completely optional, when filled, the MachineHealthCheck controller\ncreates a new object from the template referenced and hands off remediation of the machine to\na controller that lives outside of Cluster API.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "selector": {
                "description": "Label selector to match machines whose health will be exercised",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "unhealthyConditions": {
                "description": "unhealthyConditions contains a list of the conditions that determine\nwhether a node is considered unhealthy.  The conditions are combined in a\nlogical OR, i.e. if any of the conditions is met, the node is unhealthy.",
                "type": "array",
                "items": {
                  "description": "UnhealthyCondition represents a Node condition type and value with a timeout\nspecified as a duration.  When the named condition has been in the given\nstatus for at least the timeout value, a node is considered unhealthy.",
                  "type": "object",
                  "required": [
                    "status",
                    "timeout",
                    "type"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    },
                    "timeout": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "unhealthyRange": {
                "description": "Any further remediation is only allowed if the number of machines selected by \"selector\" as not healthy\nis within the range of \"UnhealthyRange\". Takes precedence over MaxUnhealthy.\nEg. \"[3-5]\" - This means that remediation will be allowed only when:\n(a) there are at least 3 unhealthy machines (and)\n(b) there are at most 5 unhealthy machines\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10722 for more details.",
                "type": "string",
                "pattern": "^\\[[0-9]+-[0-9]+\\]$"
              }
            }
          },
          "status": {
            "description": "Most recently observed status of MachineHealthCheck resource",
            "type": "object",
            "properties": {
              "conditions": {
                "description": "conditions defines current service state of the MachineHealthCheck.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "currentHealthy": {
                "description": "total number of healthy machines counted by this machine health check",
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "expectedMachines": {
                "description": "total number of machines counted by this machine health check",
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "observedGeneration": {
                "description": "observedGeneration is the latest generation observed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "remediationsAllowed": {
                "description": "remediationsAllowed is the number of further remediations allowed by this machine health check before\nmaxUnhealthy short circuiting will be applied",
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "targets": {
                "description": "targets shows the current list of machines the machine health check is watching",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in MachineHealthCheck's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "conditions represents the observations of a MachineHealthCheck's current state.\nKnown condition types are RemediationAllowed, Paused.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineHealthCheck",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineHealthCheckList": {
        "description": "MachineHealthCheckList is a list of MachineHealthCheck",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machinehealthchecks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineHealthCheck"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineHealthCheckList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineList": {
        "description": "MachineList is a list of Machine",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machines. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.Machine"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachinePool": {
        "description": "MachinePool is the Schema for the machinepools API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "MachinePoolSpec defines the desired state of MachinePool.",
            "type": "object",
            "required": [
              "clusterName",
              "template"
            ],
            "properties": {
              "clusterName": {
                "description": "clusterName is the name of the Cluster this object belongs to.",
                "type": "string",
                "minLength": 1
              },
              "failureDomains": {
                "description": "failureDomains is the list of failure domains this MachinePool should be attached to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "minReadySeconds": {
                "description": "Minimum number of seconds for which a newly created machine instances should\nbe ready.\nDefaults to 0 (machine instance will be considered available as soon as it\nis ready)",
                "type": "integer",
                "format": "int32"
              },
              "providerIDList": {
                "description": "providerIDList are the identification IDs of machine instances provided by the provider.\nThis field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "replicas": {
                "description": "Number of desired machines. Defaults to 1.\nThis is a pointer to distinguish between explicit zero and not specified.",
                "type": "integer",
                "format": "int32"
              },
              "template": {
                "description": "template describes the machines that will be created.",
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the desired behavior of the machine.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                    "type": "object",
                    "required": [
                      "bootstrap",
                      "clusterName",
                      "infrastructureRef"
                    ],
                    "properties": {
                      "bootstrap": {
                        "description": "bootstrap is a reference to a local struct which encapsulates\nfields to configure the Machine’s bootstrapping mechanism.",
                        "type": "object",
                        "properties": {
                          "configRef": {
                            "description": "configRef is a reference to a bootstrap provider-specific resource\nthat holds configuration details. The reference is optional to\nallow users/operators to specify Bootstrap.DataSecretName without\nthe need of a controller.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "API version of the referent.",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": "string"
                              },
                              "resourceVersion": {
                                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                "type": "string"
                              },
                              "uid": {
                                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSecretName": {
                            "description": "dataSecretName is the name of the secret that stores the bootstrap data script.\nIf nil, the Machine should remain in the Pending state.",
                            "type": "string"
                          }
                        }
                      },
                      "clusterName": {
                        "description": "clusterName is the name of the Cluster this object belongs to.",
                        "type": "string",
                        "minLength": 1
                      },
                      "failureDomain": {
                        "description": "failureDomain is the failure domain the machine will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                        "type": "string"
                      },
                      "infrastructureRef": {
                        "description": "infrastructureRef is a required reference to a custom resource\noffered by an infrastructure provider.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "nodeDeletionTimeout": {
                        "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                        "type": "string"
                      },
                      "nodeDrainTimeout": {
                        "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                        "type": "string"
                      },
                      "nodeVolumeDetachTimeout": {
                        "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                        "type": "string"
                      },
                      "providerID": {
                        "description": "providerID is the identification ID of the machine provided by the provider.\nThis field must match the provider ID as seen on the node object corresponding to this machine.\nThis field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler\nwith cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out\nmachines at provider which could not get registered as Kubernetes nodes. With cluster-api as a\ngeneric out-of-tree provider for autoscaler, this field is required by autoscaler to be\nable to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver\nand then a comparison is done to find out unregistered machines and are marked for delete.\nThis field will be set by the actuators and consumed by higher level entities like autoscaler that will\nbe interfacing with cluster-api as generic provider.",
                        "type": "string"
                      },
                      "readinessGates": {
                        "description": "readinessGates specifies additional conditions to include when evaluating Machine Ready condition.\n\nThis field can be used e.g. by Cluster API control plane providers to extend the semantic of the\nReady condition for the Machine they control, like the kubeadm control provider adding ReadinessGates\nfor the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.\n\nAnother example are external controllers, e.g. responsible to install special software/hardware on the Machines;\nthey can include the status of those components with a new condition and add this condition to ReadinessGates.\n\nNOTE: This field is considered only for computing v1beta2 conditions.\nNOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those\nreadiness gates condition are reporting the same message, when computing the Machine's Ready condition those\nreadinessGates will be replaced by a single entry reporting \"Control plane components: \" + message.\nThis helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).",
                        "type": "array",
                        "maxItems": 32,
                        "items": {
                          "description": "MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.",
                          "type": "object",
                          "required": [
                            "conditionType"
                          ],
                          "properties": {
                            "conditionType": {
                              "description": "conditionType refers to a positive polarity condition (status true means good) with matching type in the Machine's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.",
                              "type": "string",
                              "maxLength": 316,
                              "minLength": 1,
                              "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "conditionType"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "version": {
                        "description": "version defines the desired Kubernetes version.\nThis field is meant to be optionally used by bootstrap providers.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "MachinePoolStatus defines the observed state of MachinePool.",
            "type": "object",
            "properties": {
              "availableReplicas": {
                "description": "The number of available replicas (ready for at least minReadySeconds) for this MachinePool.",
                "type": "integer",
                "format": "int32"
              },
              "bootstrapReady": {
                "description": "bootstrapReady is the state of the bootstrap provider.",
                "type": "boolean"
              },
              "conditions": {
                "description": "conditions define the current service state of the MachinePool.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "failureMessage": {
                "description": "failureMessage indicates that there is a problem reconciling the state,\nand will be set to a descriptive error message.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "failureReason": {
                "description": "failureReason indicates that there is a problem reconciling the state, and\nwill be set to a token value suitable for programmatic interpretation.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "infrastructureReady": {
                "description": "infrastructureReady is the state of the infrastructure provider.",
                "type": "boolean"
              },
              "nodeRefs": {
                "description": "nodeRefs will point to the corresponding Nodes if it they exist.",
                "type": "array",
                "items": {
                  "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "observedGeneration": {
                "description": "observedGeneration is the latest generation observed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "phase": {
                "description": "phase represents the current phase of cluster actuation.\nE.g. Pending, Running, Terminating, Failed etc.",
                "type": "string"
              },
              "readyReplicas": {
                "description": "The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is \"Ready\".",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "replicas is the most recently observed number of replicas.",
                "type": "integer",
                "format": "int32"
              },
              "unavailableReplicas": {
                "description": "Total number of unavailable machine instances targeted by this machine pool.\nThis is the total number of machine instances that are still required for\nthe machine pool to have 100% available capacity. They may either\nbe machine instances that are running but not yet available or machine instances\nthat still have not been created.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "integer",
                "format": "int32"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in MachinePool's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "availableReplicas": {
                    "description": "availableReplicas is the number of available replicas for this MachinePool. A machine is considered available when Machine's Available condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "conditions": {
                    "description": "conditions represents the observations of a MachinePool's current state.\nKnown condition types are Available, BootstrapConfigReady, InfrastructureReady, MachinesReady, MachinesUpToDate,\nScalingUp, ScalingDown, Remediating, Deleting, Paused.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "readyReplicas": {
                    "description": "readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when Machine's Ready condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "upToDateReplicas": {
                    "description": "upToDateReplicas is the number of up-to-date replicas targeted by this MachinePool. A machine is considered up-to-date when Machine's UpToDate condition is true.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachinePool",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachinePoolList": {
        "description": "MachinePoolList is a list of MachinePool",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machinepools. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachinePool"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachinePoolList",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineSet": {
        "description": "MachineSet is the Schema for the machinesets API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
              }
            ]
          },
          "spec": {
            "description": "MachineSetSpec defines the desired state of MachineSet.",
            "type": "object",
            "required": [
              "clusterName",
              "selector"
            ],
            "properties": {
              "clusterName": {
                "description": "clusterName is the name of the Cluster this object belongs to.",
                "type": "string",
                "minLength": 1
              },
              "deletePolicy": {
                "description": "deletePolicy defines the policy used to identify nodes to delete when downscaling.\nDefaults to \"Random\".  Valid values are \"Random, \"Newest\", \"Oldest\"",
                "type": "string",
                "enum": [
                  "Random",
                  "Newest",
                  "Oldest"
                ]
              },
              "minReadySeconds": {
                "description": "minReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available.\nDefaults to 0 (machine will be considered available as soon as the Node is ready)",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "replicas is the number of desired replicas.\nThis is a pointer to distinguish between explicit zero and unspecified.\n\nDefaults to:\n* if the Kubernetes autoscaler min size and max size annotations are set:\n  - if it's a new MachineSet, use min size\n  - if the replicas field of the old MachineSet is < min size, use min size\n  - if the replicas field of the old MachineSet is > max size, use max size\n  - if the replicas field of the old MachineSet is in the (min size, max size) range, keep the value from the oldMS\n* otherwise use 1\nNote: Defaulting will be run whenever the replicas field is not set:\n* A new MachineSet is created with replicas not set.\n* On an existing MachineSet the replicas field was first set and is now unset.\nThose cases are especially relevant for the following Kubernetes autoscaler use cases:\n* A new MachineSet is created and replicas should be managed by the autoscaler\n* An existing MachineSet which initially wasn't controlled by the autoscaler\n  should be later controlled by the autoscaler",
                "type": "integer",
                "format": "int32"
              },
              "selector": {
                "description": "selector is a label query over machines that should match the replica count.\nLabel keys and values that must match in order to be controlled by this MachineSet.\nIt must match the machine template's labels.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "template": {
                "description": "template is the object that describes the machine that will be created if\ninsufficient replicas are detected.\nObject references to custom resources are treated as templates.",
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the desired behavior of the machine.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                    "type": "object",
                    "required": [
                      "bootstrap",
                      "clusterName",
                      "infrastructureRef"
                    ],
                    "properties": {
                      "bootstrap": {
                        "description": "bootstrap is a reference to a local struct which encapsulates\nfields to configure the Machine’s bootstrapping mechanism.",
                        "type": "object",
                        "properties": {
                          "configRef": {
                            "description": "configRef is a reference to a bootstrap provider-specific resource\nthat holds configuration details. The reference is optional to\nallow users/operators to specify Bootstrap.DataSecretName without\nthe need of a controller.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "API version of the referent.",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": "string"
                              },
                              "resourceVersion": {
                                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                "type": "string"
                              },
                              "uid": {
                                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSecretName": {
                            "description": "dataSecretName is the name of the secret that stores the bootstrap data script.\nIf nil, the Machine should remain in the Pending state.",
                            "type": "string"
                          }
                        }
                      },
                      "clusterName": {
                        "description": "clusterName is the name of the Cluster this object belongs to.",
                        "type": "string",
                        "minLength": 1
                      },
                      "failureDomain": {
                        "description": "failureDomain is the failure domain the machine will be created in.\nMust match a key in the FailureDomains map stored on the cluster object.",
                        "type": "string"
                      },
                      "infrastructureRef": {
                        "description": "infrastructureRef is a required reference to a custom resource\noffered by an infrastructure provider.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "nodeDeletionTimeout": {
                        "description": "nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                        "type": "string"
                      },
                      "nodeDrainTimeout": {
                        "description": "nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: NodeDrainTimeout is different from `kubectl drain --timeout`",
                        "type": "string"
                      },
                      "nodeVolumeDetachTimeout": {
                        "description": "nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                        "type": "string"
                      },
                      "providerID": {
                        "description": "providerID is the identification ID of the machine provided by the provider.\nThis field must match the provider ID as seen on the node object corresponding to this machine.\nThis field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler\nwith cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out\nmachines at provider which could not get registered as Kubernetes nodes. With cluster-api as a\ngeneric out-of-tree provider for autoscaler, this field is required by autoscaler to be\nable to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver\nand then a comparison is done to find out unregistered machines and are marked for delete.\nThis field will be set by the actuators and consumed by higher level entities like autoscaler that will\nbe interfacing with cluster-api as generic provider.",
                        "type": "string"
                      },
                      "readinessGates": {
                        "description": "readinessGates specifies additional conditions to include when evaluating Machine Ready condition.\n\nThis field can be used e.g. by Cluster API control plane providers to extend the semantic of the\nReady condition for the Machine they control, like the kubeadm control provider adding ReadinessGates\nfor the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.\n\nAnother example are external controllers, e.g. responsible to install special software/hardware on the Machines;\nthey can include the status of those components with a new condition and add this condition to ReadinessGates.\n\nNOTE: This field is considered only for computing v1beta2 conditions.\nNOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those\nreadiness gates condition are reporting the same message, when computing the Machine's Ready condition those\nreadinessGates will be replaced by a single entry reporting \"Control plane components: \" + message.\nThis helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).",
                        "type": "array",
                        "maxItems": 32,
                        "items": {
                          "description": "MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.",
                          "type": "object",
                          "required": [
                            "conditionType"
                          ],
                          "properties": {
                            "conditionType": {
                              "description": "conditionType refers to a positive polarity condition (status true means good) with matching type in the Machine's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.",
                              "type": "string",
                              "maxLength": 316,
                              "minLength": 1,
                              "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "conditionType"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "version": {
                        "description": "version defines the desired Kubernetes version.\nThis field is meant to be optionally used by bootstrap providers.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "MachineSetStatus defines the observed state of MachineSet.",
            "type": "object",
            "properties": {
              "availableReplicas": {
                "description": "The number of available replicas (ready for at least minReadySeconds) for this MachineSet.",
                "type": "integer",
                "format": "int32"
              },
              "conditions": {
                "description": "conditions defines current service state of the MachineSet.",
                "type": "array",
                "items": {
                  "description": "Condition defines an observation of a Cluster API resource operational state.",
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                      "type": "string"
                    }
                  }
                }
              },
              "failureMessage": {
                "description": "Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "failureReason": {
                "description": "In the event that there is a terminal problem reconciling the\nreplicas, both FailureReason and FailureMessage will be set. FailureReason\nwill be populated with a succinct value suitable for machine\ninterpretation, while FailureMessage will contain a more verbose\nstring suitable for logging and human consumption.\n\nThese fields should not be set for transitive errors that a\ncontroller faces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the MachineTemplate's spec or the configuration of\nthe machine controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the machine controller, or the\nresponsible machine controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of Machines\ncan be added as events to the MachineSet object and/or logged in the\ncontroller's output.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "string"
              },
              "fullyLabeledReplicas": {
                "description": "The number of replicas that have labels matching the labels of the machine template of the MachineSet.\n\nDeprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                "type": "integer",
                "format": "int32"
              },
              "observedGeneration": {
                "description": "observedGeneration reflects the generation of the most recently observed MachineSet.",
                "type": "integer",
                "format": "int64"
              },
              "readyReplicas": {
                "description": "The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is \"Ready\".",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "replicas is the most recently observed number of replicas.",
                "type": "integer",
                "format": "int32"
              },
              "selector": {
                "description": "selector is the same as the label selector but in the string format to avoid introspection\nby clients. The string will be in the same format as the query-param syntax.\nMore info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors",
                "type": "string"
              },
              "v1beta2": {
                "description": "v1beta2 groups all the fields that will be added or modified in MachineSet's status with the V1Beta2 version.",
                "type": "object",
                "properties": {
                  "availableReplicas": {
                    "description": "availableReplicas is the number of available replicas for this MachineSet. A machine is considered available when Machine's Available condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "conditions": {
                    "description": "conditions represents the observations of a MachineSet's current state.\nKnown condition types are MachinesReady, MachinesUpToDate, ScalingUp, ScalingDown, Remediating, Deleting, Paused.",
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "readyReplicas": {
                    "description": "readyReplicas is the number of ready replicas for this MachineSet. A machine is considered ready when Machine's Ready condition is true.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "upToDateReplicas": {
                    "description": "upToDateReplicas is the number of up-to-date replicas for this MachineSet. A machine is considered up-to-date when Machine's UpToDate condition is true.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineSet",
            "version": "v1beta1"
          }
        ]
      },
      "io.x-k8s.cluster.v1beta1.MachineSetList": {
        "description": "MachineSetList is a list of MachineSet",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "description": "List of machinesets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.x-k8s.cluster.v1beta1.MachineSet"
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "allOf": [
              {
                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cluster.x-k8s.io",
            "kind": "MachineSetList",
            "version": "v1beta1"
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
