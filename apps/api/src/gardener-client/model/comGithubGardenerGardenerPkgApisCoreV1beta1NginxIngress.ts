/**
 * Gardener
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.98.0-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * NginxIngress describes configuration values for the nginx-ingress addon.
 */
export interface ComGithubGardenerGardenerPkgApisCoreV1beta1NginxIngress { 
    /**
     * Config contains custom configuration for the nginx-ingress-controller configuration. See https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md#configuration-options
     */
    config?: { [key: string]: string; };
    /**
     * Enabled indicates whether the addon is enabled or not.
     */
    enabled: boolean;
    /**
     * ExternalTrafficPolicy controls the `.spec.externalTrafficPolicy` value of the load balancer `Service` exposing the nginx-ingress. Defaults to `Cluster`.  Possible enum values:  - `\"Cluster\"`  - `\"Cluster\"` routes traffic to all endpoints.  - `\"Local\"`  - `\"Local\"` preserves the source IP of the traffic by routing only to endpoints on the same node as the traffic was received on (dropping the traffic if there are no local endpoints).
     */
    externalTrafficPolicy?: ComGithubGardenerGardenerPkgApisCoreV1beta1NginxIngress.ExternalTrafficPolicyEnum;
    /**
     * LoadBalancerSourceRanges is list of allowed IP sources for NginxIngress
     */
    loadBalancerSourceRanges?: Array<string>;
}
export namespace ComGithubGardenerGardenerPkgApisCoreV1beta1NginxIngress {
    export type ExternalTrafficPolicyEnum = 'Cluster' | 'Cluster' | 'Local' | 'Local';
    export const ExternalTrafficPolicyEnum = {
        Cluster: 'Cluster' as ExternalTrafficPolicyEnum,
        Cluster2: 'Cluster' as ExternalTrafficPolicyEnum,
        Local: 'Local' as ExternalTrafficPolicyEnum,
        Local2: 'Local' as ExternalTrafficPolicyEnum
    };
}


