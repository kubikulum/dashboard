/**
 * Gardener
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.98.0-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ComGithubGardenerGardenerPkgApisCoreV1beta1WorkerSystemComponents } from './comGithubGardenerGardenerPkgApisCoreV1beta1WorkerSystemComponents';
import { IoK8sApimachineryPkgUtilIntstrIntOrString } from './ioK8sApimachineryPkgUtilIntstrIntOrString';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1CRI } from './comGithubGardenerGardenerPkgApisCoreV1beta1CRI';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1WorkerKubernetes } from './comGithubGardenerGardenerPkgApisCoreV1beta1WorkerKubernetes';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1ClusterAutoscalerOptions } from './comGithubGardenerGardenerPkgApisCoreV1beta1ClusterAutoscalerOptions';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1DataVolume } from './comGithubGardenerGardenerPkgApisCoreV1beta1DataVolume';
import { IoK8sApiCoreV1Taint } from './ioK8sApiCoreV1Taint';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1Volume } from './comGithubGardenerGardenerPkgApisCoreV1beta1Volume';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1Machine } from './comGithubGardenerGardenerPkgApisCoreV1beta1Machine';
import { ComGithubGardenerGardenerPkgApisCoreV1beta1MachineControllerManagerSettings } from './comGithubGardenerGardenerPkgApisCoreV1beta1MachineControllerManagerSettings';


/**
 * Worker is the base definition of a worker group.
 */
export interface ComGithubGardenerGardenerPkgApisCoreV1beta1Worker { 
    /**
     * Annotations is a map of key/value pairs for annotations for all the `Node` objects in this worker pool.
     */
    annotations?: { [key: string]: string; };
    /**
     * CABundle is a certificate bundle which will be installed onto every machine of this worker pool.
     */
    caBundle?: string;
    /**
     * ClusterAutoscaler contains the cluster autoscaler configurations for the worker pool.
     */
    clusterAutoscaler?: ComGithubGardenerGardenerPkgApisCoreV1beta1ClusterAutoscalerOptions;
    /**
     * CRI contains configurations of CRI support of every machine in the worker pool. Defaults to a CRI with name `containerd`.
     */
    cri?: ComGithubGardenerGardenerPkgApisCoreV1beta1CRI;
    /**
     * DataVolumes contains a list of additional worker volumes.
     */
    dataVolumes?: Array<ComGithubGardenerGardenerPkgApisCoreV1beta1DataVolume>;
    /**
     * KubeletDataVolumeName contains the name of a dataVolume that should be used for storing kubelet state.
     */
    kubeletDataVolumeName?: string;
    /**
     * Kubernetes contains configuration for Kubernetes components related to this worker pool.
     */
    kubernetes?: ComGithubGardenerGardenerPkgApisCoreV1beta1WorkerKubernetes;
    /**
     * Labels is a map of key/value pairs for labels for all the `Node` objects in this worker pool.
     */
    labels?: { [key: string]: string; };
    /**
     * Machine contains information about the machine type and image.
     */
    machine: ComGithubGardenerGardenerPkgApisCoreV1beta1Machine;
    /**
     * MachineControllerManagerSettings contains configurations for different worker-pools. Eg. MachineDrainTimeout, MachineHealthTimeout.
     */
    machineControllerManager?: ComGithubGardenerGardenerPkgApisCoreV1beta1MachineControllerManagerSettings;
    /**
     * MaxSurge is maximum number of machines that are created during an update. This value is divided by the number of configured zones for a fair distribution.
     */
    maxSurge?: IoK8sApimachineryPkgUtilIntstrIntOrString;
    /**
     * MaxUnavailable is the maximum number of machines that can be unavailable during an update. This value is divided by the number of configured zones for a fair distribution.
     */
    maxUnavailable?: IoK8sApimachineryPkgUtilIntstrIntOrString;
    /**
     * Maximum is the maximum number of machines to create. This value is divided by the number of configured zones for a fair distribution.
     */
    maximum: number;
    /**
     * Minimum is the minimum number of machines to create. This value is divided by the number of configured zones for a fair distribution.
     */
    minimum: number;
    /**
     * Name is the name of the worker group.
     */
    name: string;
    /**
     * ProviderConfig is the provider-specific configuration for this worker pool.
     */
    providerConfig?: object;
    /**
     * Sysctls is a map of kernel settings to apply on all machines in this worker pool.
     */
    sysctls?: { [key: string]: string; };
    /**
     * SystemComponents contains configuration for system components related to this worker pool
     */
    systemComponents?: ComGithubGardenerGardenerPkgApisCoreV1beta1WorkerSystemComponents;
    /**
     * Taints is a list of taints for all the `Node` objects in this worker pool.
     */
    taints?: Array<IoK8sApiCoreV1Taint>;
    /**
     * Volume contains information about the volume type and size.
     */
    volume?: ComGithubGardenerGardenerPkgApisCoreV1beta1Volume;
    /**
     * Zones is a list of availability zones that are used to evenly distribute this worker pool. Optional as not every provider may support availability zones.
     */
    zones?: Array<string>;
}

