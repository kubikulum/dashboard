/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { OrganizationWhereUniqueInput } from "../../organization/base/OrganizationWhereUniqueInput";
import { OrganizationMemberUpdateManyWithoutInvitationsInput } from "./OrganizationMemberUpdateManyWithoutInvitationsInput";
import { EnumInvitationStatus } from "./EnumInvitationStatus";

@InputType()
class InvitationUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expirationDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  inviter?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrganizationWhereUniqueInput)
  @IsOptional()
  @Field(() => OrganizationWhereUniqueInput, {
    nullable: true,
  })
  organization?: OrganizationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationMemberUpdateManyWithoutInvitationsInput,
  })
  @ValidateNested()
  @Type(() => OrganizationMemberUpdateManyWithoutInvitationsInput)
  @IsOptional()
  @Field(() => OrganizationMemberUpdateManyWithoutInvitationsInput, {
    nullable: true,
  })
  organizationMembers?: OrganizationMemberUpdateManyWithoutInvitationsInput;

  @ApiProperty({
    required: false,
    enum: EnumInvitationStatus,
  })
  @IsEnum(EnumInvitationStatus)
  @IsOptional()
  @Field(() => EnumInvitationStatus, {
    nullable: true,
  })
  status?: "PENDING" | "ACCEPTED" | "REVOKED" | null;
}

export { InvitationUpdateInput as InvitationUpdateInput };
