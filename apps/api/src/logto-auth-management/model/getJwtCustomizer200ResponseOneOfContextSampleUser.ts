/**
 * Logto API references
 * API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.
 *
 * The version of the OpenAPI document: Cloud
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GetJwtCustomizer200ResponseOneOfContextSampleUserSsoIdentitiesInner } from './getJwtCustomizer200ResponseOneOfContextSampleUserSsoIdentitiesInner';
import { ListApplicationUserConsentScopes200ResponseOrganizationScopesInner } from './listApplicationUserConsentScopes200ResponseOrganizationScopesInner';
import { GetJwtCustomizer200ResponseOneOfContextSampleUserIdentitiesValue } from './getJwtCustomizer200ResponseOneOfContextSampleUserIdentitiesValue';
import { GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner } from './getJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner';
import { GetJwtCustomizer200ResponseOneOfContextSampleUserProfile } from './getJwtCustomizer200ResponseOneOfContextSampleUserProfile';
import { GetJwtCustomizer200ResponseOneOfContextSampleUserRolesInner } from './getJwtCustomizer200ResponseOneOfContextSampleUserRolesInner';


export interface GetJwtCustomizer200ResponseOneOfContextSampleUser { 
    id?: string;
    username?: string | null;
    primaryEmail?: string | null;
    primaryPhone?: string | null;
    name?: string | null;
    avatar?: string | null;
    /**
     * arbitrary
     */
    customData?: object;
    identities?: { [key: string]: GetJwtCustomizer200ResponseOneOfContextSampleUserIdentitiesValue; };
    lastSignInAt?: number | null;
    createdAt?: number;
    updatedAt?: number;
    profile?: GetJwtCustomizer200ResponseOneOfContextSampleUserProfile;
    applicationId?: string | null;
    isSuspended?: boolean;
    hasPassword?: boolean;
    ssoIdentities?: Array<GetJwtCustomizer200ResponseOneOfContextSampleUserSsoIdentitiesInner>;
    mfaVerificationFactors?: Array<GetJwtCustomizer200ResponseOneOfContextSampleUser.MfaVerificationFactorsEnum>;
    roles?: Array<GetJwtCustomizer200ResponseOneOfContextSampleUserRolesInner>;
    organizations?: Array<ListApplicationUserConsentScopes200ResponseOrganizationScopesInner>;
    organizationRoles?: Array<GetJwtCustomizer200ResponseOneOfContextSampleUserOrganizationRolesInner>;
}
export namespace GetJwtCustomizer200ResponseOneOfContextSampleUser {
    export type MfaVerificationFactorsEnum = 'Totp' | 'WebAuthn' | 'BackupCode';
    export const MfaVerificationFactorsEnum = {
        Totp: 'Totp' as MfaVerificationFactorsEnum,
        WebAuthn: 'WebAuthn' as MfaVerificationFactorsEnum,
        BackupCode: 'BackupCode' as MfaVerificationFactorsEnum
    };
}


